//##########################################################
// Verilog Snippet File                                     
// Generated by genRF (Version 1.01) 08/25/2017 00:09:00        
//                                                          
//##########################################################


//##########################################################
// Use below for Internal Wire Declaration in Top Verilog   
//##########################################################

    //MBus & Layer Ctrl Register Files
    wire        resetn;
    wire        lc_isolate;
    wire [71:0] lc2rf_addr_in;
    wire [23:0] lc2rf_data_in;
    //Register 0x00 (  0)
    wire [ 4:0] tcyc_read;
    wire [ 5:0] t3us;
    wire [ 5:0] t5us;
    wire [ 6:0] t10us;
    //Register 0x01 (  1)
    wire [15:0] tcyc_prog;
    wire [ 7:0] tprog;
    //Register 0x02 (  2)
    wire [15:0] terase;
    //Register 0x03 (  3)
    wire [13:0] thvcp_en;
    wire [ 9:0] tben;
    //Register 0x04 (  4)
    wire [11:0] tmvcp_en;
    wire [11:0] tsc_en;
    //Register 0x05 (  5)
    wire [19:0] tcap;
    //Register 0x06 (  6)
    wire [16:0] tvref;
    //Register 0x07 (  7)
    wire [12:0] sram_start_addr;
    //Register 0x08 (  8)
    wire [17:0] flsh_start_addr;
    //Register 0x09 (  9)
    wire [12:0] length;
    wire        irq_en;
    wire [ 3:0] cmd;
    wire        go;
    //Register 0x0A ( 10)
    wire        vref_sleep;
    wire        comp_sleep;
    wire        comp_clkenb;
    wire        comp_clken; // Inverted Signal of comp_clkenb
    wire        comp_isol;
    //Register 0x0C ( 12)
    wire        wrap_ext;
    wire        update_addr_ext;
    wire [ 1:0] bit_en_ext;
    //Register 0x0D ( 13)
    wire [19:0] timeout_ext;
    //Register 0x0E ( 14)
    wire [12:0] sram_start_addr_ext;
    //Register 0x0F ( 15)
    wire [ 7:0] int_rply_short_addr;
    wire [ 7:0] int_rply_reg_addr;
    //Register 0x10 ( 16)
    wire        boot_flag_sleep;
    wire        boot_flag_ecc_error;
    wire        boot_flag_wrong_header;
    wire        boot_flag_pwdn;
    wire        boot_flag_invalid_cmnd;
    wire        boot_flag_chksum_error;
    wire        boot_flag_success;
    wire [ 1:0] boot_reg_pattern;
    //Register 0x11 ( 17)
    wire        flash_power_do_vrefcomp;
    wire        flash_power_do_flsh;
    wire        flash_power_irq_en;
    wire        flash_power_sel_on;
    wire        flash_power_go;
    //Register 0x12 ( 18)
    wire        irq_pwr_on_wup;
    wire [ 2:0] sel_pwr_on_wup;
    wire        flash_auto_use_custom;
    wire        flash_auto_off;
    wire        flash_auto_on;
    //Register 0x13 ( 19)
    wire [18:0] pp_str_limit;
    wire        pp_str_en;
    //Register 0x14 ( 20)
    wire        pp_no_err_detection;
    wire        pp_use_fast_prog;
    wire        pp_wrap;
    wire [ 1:0] pp_bit_en_ext;
    //Register 0x15 ( 21)
    wire [17:0] pp_flsh_addr;
    //Register 0x16 ( 22)
    wire [18:0] pp_length_streamed;
    //Register 0x17 ( 23)
    wire        pp_flag_end_of_flash;
    wire        pp_flag_str_limit;
    wire        pp_flag_copy_limit;
    wire [18:0] pp_length_copied;
    //Register 0x18 ( 24)
    wire [ 3:0] clk_ring_sel;
    wire [ 1:0] clk_div_sel;
    //Register 0x19 ( 25)
    wire        disable_bypass_mirror;
    wire [ 3:0] comp_ctrl_i_1stg;
    wire [ 3:0] comp_ctrl_i_2stg_bar;
    wire [ 2:0] comp_ctrl_vout;
    //Register 0x1B ( 27)
    wire [ 7:0] irq_payload;
    //Register 0x1E ( 30)
    wire [23:0] fls2lc_reg_wr_data;
    //Register 0x1F ( 31)
    wire        force_resetn;
    //Register 0x20 ( 32)
    wire [ 4:0] flsh_set0;
    wire [ 4:0] flsh_set1;
    wire [ 4:0] flsh_snt;
    //Register 0x21 ( 33)
    wire [ 4:0] flsh_spt0;
    wire [ 4:0] flsh_spt1;
    wire [ 4:0] flsh_spt2;
    //Register 0x22 ( 34)
    wire [ 4:0] flsh_syt0;
    wire [ 4:0] flsh_syt1;
    //Register 0x23 ( 35)
    wire [ 4:0] flsh_srt0;
    wire [ 4:0] flsh_srt1;
    wire [ 4:0] flsh_srt2;
    wire [ 4:0] flsh_srt3;
    //Register 0x24 ( 36)
    wire [ 4:0] flsh_srt4;
    wire [ 4:0] flsh_srt5;
    wire [ 4:0] flsh_srt6;
    //Register 0x26 ( 38)
    wire [ 3:0] flsh_spig;
    wire [ 3:0] flsh_srig;
    wire [ 3:0] flsh_svr0;
    wire [ 3:0] flsh_svr1;
    wire [ 3:0] flsh_svr2;
    //Register 0x27 ( 39)
    wire [ 4:0] flsh_shve;
    wire [ 4:0] flsh_shvp;
    wire [ 4:0] flsh_shvct;
    wire [ 5:0] flsh_smv;
    //Register 0x28 ( 40)
    wire [ 4:0] flsh_smvct0;
    wire [ 4:0] flsh_smvct1;
    //Register 0x2A ( 42)
    wire [ 5:0] flsh_sab;
    //Register 0x30 ( 48)
    wire [ 7:0] str_wr_ch1_alt_addr;
    //Register 0x31 ( 49)
    wire [ 7:0] str_wr_ch1_alt_reg_wr;
    //Register 0x32 ( 50)
    wire        str_wr_ch1_en;
    wire        str_wr_ch1_wrp;
    wire        str_wr_ch1_dblb;
    wire [12:0] str_wr_ch1_buf_len;
    //Register 0x33 ( 51)
    wire [12:0] str_wr_ch1_buf_off;
    //Register 0x34 ( 52)
    wire [ 7:0] str_wr_ch0_alt_addr;
    //Register 0x35 ( 53)
    wire [ 7:0] str_wr_ch0_alt_reg_wr;
    //Register 0x36 ( 54)
    wire        str_wr_ch0_en;
    wire        str_wr_ch0_wrp;
    wire        str_wr_ch0_dblb;
    wire [12:0] str_wr_ch0_buf_len;
    //Register 0x37 ( 55)
    wire [12:0] str_wr_ch0_buf_off;
    //Register 0x3A ( 58)
    wire        blk_wr_en;
    //Register 0x47 ( 71)
    wire        act_rst;


//##########################################################
// Use below for Register File Instantiation in Top Verilog 
//##########################################################

    //******************************
    // MBus Register File
    //******************************

    //******************************
    // Layer Ctrl Register File
    //******************************
    flpv3l_rf flpv3l_rf_0
       (
        //Power
        //.VDD	(VDD_1P2),
        //.VSS	(VSS),
        //Input
        .RESETn	(resetn),
        .ISOLATE	(lc_isolate),
        .ADDR_IN	(lc2rf_addr_in),
        .DATA_IN	(lc2rf_data_in),
        //Output
        //Register 0x00 (0)
        .Tcyc_read	(tcyc_read),
        .T3us	(t3us),
        .T5us	(t5us),
        .T10us	(t10us),
        //Register 0x01 (1)
        .Tcyc_prog	(tcyc_prog),
        .Tprog	(tprog),
        //Register 0x02 (2)
        .Terase	(terase),
        //Register 0x03 (3)
        .Thvcp_en	(thvcp_en),
        .Tben	(tben),
        //Register 0x04 (4)
        .Tmvcp_en	(tmvcp_en),
        .Tsc_en	(tsc_en),
        //Register 0x05 (5)
        .Tcap	(tcap),
        //Register 0x06 (6)
        .Tvref	(tvref),
        //Register 0x07 (7)
        //.SRAM_START_ADDR	(sram_start_addr),
        //Register 0x08 (8)
        //.FLSH_START_ADDR	(flsh_start_addr),
        //Register 0x09 (9)
        //.LENGTH	(length),
        //.IRQ_EN	(irq_en),
        //.CMD	(cmd),
        //.GO	(go),
        //Register 0x0A (10)
        .VREF_SLEEP	(vref_sleep),
        .COMP_SLEEP	(comp_sleep),
        .COMP_CLKENB	(comp_clkenb),
        .COMP_CLKEN	(comp_clken),
        .COMP_ISOL	(comp_isol),
        //Register 0x0B (11)
        //--- Empty Register
        //Register 0x0C (12)
        .WRAP_EXT	(wrap_ext),
        .UPDATE_ADDR_EXT	(update_addr_ext),
        .BIT_EN_EXT	(bit_en_ext),
        //Register 0x0D (13)
        .TIMEOUT_EXT	(timeout_ext),
        //Register 0x0E (14)
        .SRAM_START_ADDR_EXT	(sram_start_addr_ext),
        //Register 0x0F (15)
        .INT_RPLY_SHORT_ADDR	(int_rply_short_addr),
        .INT_RPLY_REG_ADDR	(int_rply_reg_addr),
        //Register 0x10 (16)
        .BOOT_FLAG_SLEEP	(boot_flag_sleep),
        .BOOT_FLAG_ECC_ERROR	(boot_flag_ecc_error),
        .BOOT_FLAG_WRONG_HEADER	(boot_flag_wrong_header),
        .BOOT_FLAG_PWDN	(boot_flag_pwdn),
        .BOOT_FLAG_INVALID_CMND	(boot_flag_invalid_cmnd),
        .BOOT_FLAG_CHKSUM_ERROR	(boot_flag_chksum_error),
        .BOOT_FLAG_SUCCESS	(boot_flag_success),
        .BOOT_REG_PATTERN	(boot_reg_pattern),
        //Register 0x11 (17)
        .FLASH_POWER_DO_VREFCOMP	(flash_power_do_vrefcomp),
        .FLASH_POWER_DO_FLSH	(flash_power_do_flsh),
        .FLASH_POWER_IRQ_EN	(flash_power_irq_en),
        .FLASH_POWER_SEL_ON	(flash_power_sel_on),
        .FLASH_POWER_GO	(flash_power_go),
        //Register 0x12 (18)
        .IRQ_PWR_ON_WUP	(irq_pwr_on_wup),
        .SEL_PWR_ON_WUP	(sel_pwr_on_wup),
        .FLASH_AUTO_USE_CUSTOM	(flash_auto_use_custom),
        .FLASH_AUTO_OFF	(flash_auto_off),
        .FLASH_AUTO_ON	(flash_auto_on),
        //Register 0x13 (19)
        //.PP_STR_LIMIT	(pp_str_limit),
        //.PP_STR_EN	(pp_str_en),
        //Register 0x14 (20)
        .PP_NO_ERR_DETECTION	(pp_no_err_detection),
        .PP_USE_FAST_PROG	(pp_use_fast_prog),
        .PP_WRAP	(pp_wrap),
        .PP_BIT_EN_EXT	(pp_bit_en_ext),
        //Register 0x15 (21)
        .PP_FLSH_ADDR	(pp_flsh_addr),
        //Register 0x16 (22)
        //.PP_LENGTH_STREAMED	(pp_length_streamed),
        //Register 0x17 (23)
        //.PP_FLAG_END_OF_FLASH	(pp_flag_end_of_flash),
        //.PP_FLAG_STR_LIMIT	(pp_flag_str_limit),
        //.PP_FLAG_COPY_LIMIT	(pp_flag_copy_limit),
        //.PP_LENGTH_COPIED	(pp_length_copied),
        //Register 0x18 (24)
        .CLK_RING_SEL	(clk_ring_sel),
        .CLK_DIV_SEL	(clk_div_sel),
        //Register 0x19 (25)
        .DISABLE_BYPASS_MIRROR	(disable_bypass_mirror),
        .COMP_CTRL_I_1STG	(comp_ctrl_i_1stg),
        .COMP_CTRL_I_2STG_BAR	(comp_ctrl_i_2stg_bar),
        .COMP_CTRL_VOUT	(comp_ctrl_vout),
        //Register 0x1A (26)
        //--- Empty Register
        //Register 0x1B (27)
        //.IRQ_PAYLOAD	(irq_payload),
        //Register 0x1C (28)
        //--- Empty Register
        //Register 0x1D (29)
        //--- Empty Register
        //Register 0x1E (30)
        //.FLS2LC_REG_WR_DATA	(fls2lc_reg_wr_data),
        //Register 0x1F (31)
        .FORCE_RESETN	(force_resetn),
        //Register 0x20 (32)
        .FLSH_SET0	(flsh_set0),
        .FLSH_SET1	(flsh_set1),
        .FLSH_SNT	(flsh_snt),
        //Register 0x21 (33)
        .FLSH_SPT0	(flsh_spt0),
        .FLSH_SPT1	(flsh_spt1),
        .FLSH_SPT2	(flsh_spt2),
        //Register 0x22 (34)
        .FLSH_SYT0	(flsh_syt0),
        .FLSH_SYT1	(flsh_syt1),
        //Register 0x23 (35)
        .FLSH_SRT0	(flsh_srt0),
        .FLSH_SRT1	(flsh_srt1),
        .FLSH_SRT2	(flsh_srt2),
        .FLSH_SRT3	(flsh_srt3),
        //Register 0x24 (36)
        .FLSH_SRT4	(flsh_srt4),
        .FLSH_SRT5	(flsh_srt5),
        .FLSH_SRT6	(flsh_srt6),
        //Register 0x25 (37)
        //--- Empty Register
        //Register 0x26 (38)
        .FLSH_SPIG	(flsh_spig),
        .FLSH_SRIG	(flsh_srig),
        .FLSH_SVR0	(flsh_svr0),
        .FLSH_SVR1	(flsh_svr1),
        .FLSH_SVR2	(flsh_svr2),
        //Register 0x27 (39)
        .FLSH_SHVE	(flsh_shve),
        .FLSH_SHVP	(flsh_shvp),
        .FLSH_SHVCT	(flsh_shvct),
        .FLSH_SMV	(flsh_smv),
        //Register 0x28 (40)
        .FLSH_SMVCT0	(flsh_smvct0),
        .FLSH_SMVCT1	(flsh_smvct1),
        //Register 0x29 (41)
        //--- Empty Register
        //Register 0x2A (42)
        .FLSH_SAB	(flsh_sab),
        //Register 0x2B (43)
        //--- Empty Register
        //Register 0x2C (44)
        //--- Empty Register
        //Register 0x2D (45)
        //--- Empty Register
        //Register 0x2E (46)
        //--- Empty Register
        //Register 0x2F (47)
        //--- Empty Register
        //Register 0x30 (48)
        .STR_WR_CH1_ALT_ADDR	(str_wr_ch1_alt_addr),
        //Register 0x31 (49)
        .STR_WR_CH1_ALT_REG_WR	(str_wr_ch1_alt_reg_wr),
        //Register 0x32 (50)
        .STR_WR_CH1_EN	(str_wr_ch1_en),
        .STR_WR_CH1_WRP	(str_wr_ch1_wrp),
        .STR_WR_CH1_DBLB	(str_wr_ch1_dblb),
        .STR_WR_CH1_BUF_LEN	(str_wr_ch1_buf_len),
        //Register 0x33 (51)
        .STR_WR_CH1_BUF_OFF	(str_wr_ch1_buf_off),
        //Register 0x34 (52)
        .STR_WR_CH0_ALT_ADDR	(str_wr_ch0_alt_addr),
        //Register 0x35 (53)
        .STR_WR_CH0_ALT_REG_WR	(str_wr_ch0_alt_reg_wr),
        //Register 0x36 (54)
        .STR_WR_CH0_EN	(str_wr_ch0_en),
        .STR_WR_CH0_WRP	(str_wr_ch0_wrp),
        .STR_WR_CH0_DBLB	(str_wr_ch0_dblb),
        .STR_WR_CH0_BUF_LEN	(str_wr_ch0_buf_len),
        //Register 0x37 (55)
        .STR_WR_CH0_BUF_OFF	(str_wr_ch0_buf_off),
        //Register 0x38 (56)
        //--- Empty Register
        //Register 0x39 (57)
        //--- Empty Register
        //Register 0x3A (58)
        .BLK_WR_EN	(blk_wr_en),
        //Register 0x3B (59)
        //--- Empty Register
        //Register 0x3C (60)
        //--- Empty Register
        //Register 0x3D (61)
        //--- Empty Register
        //Register 0x3E (62)
        //--- Empty Register
        //Register 0x3F (63)
        //--- Empty Register
        //Register 0x40 (64)
        //--- Empty Register
        //Register 0x41 (65)
        //--- Empty Register
        //Register 0x42 (66)
        //--- Empty Register
        //Register 0x43 (67)
        //--- Empty Register
        //Register 0x44 (68)
        //--- Empty Register
        //Register 0x45 (69)
        //--- Empty Register
        //Register 0x46 (70)
        //--- Empty Register
        //Register 0x47 (71)
        .ACT_RST	(act_rst)
       );

    flpv3l_layer_ctrl_rf flpv3l_layer_ctrl_rf_0
       (
        //Power
        //.VDD	(VDD_*_LC),
        //.VSS	(VSS),
        //Input
        .RESETn	(lc_reset_b),
        .ADDR_IN	(lc2rf_addr_in),
        .DATA_IN	(lc2rf_data_in),
        //Output
        //Register 0x07 (7)
        .SRAM_START_ADDR	(sram_start_addr),
        //Register 0x08 (8)
        .FLSH_START_ADDR	(flsh_start_addr),
        //Register 0x09 (9)
        .LENGTH	(length),
        .IRQ_EN	(irq_en),
        .CMD	(cmd),
        .GO	(go),
        //Register 0x13 (19)
        .PP_STR_LIMIT	(pp_str_limit),
        .PP_STR_EN	(pp_str_en),
        //Register 0x16 (22)
        .PP_LENGTH_STREAMED	(pp_length_streamed),
        //Register 0x17 (23)
        .PP_FLAG_END_OF_FLASH	(pp_flag_end_of_flash),
        .PP_FLAG_STR_LIMIT	(pp_flag_str_limit),
        .PP_FLAG_COPY_LIMIT	(pp_flag_copy_limit),
        .PP_LENGTH_COPIED	(pp_length_copied)
       );


//##########################################################
// Use below for Layer Controller REG_RD_DATA connection    
//##########################################################

    // Interface with Registers
    .REG_RD_DATA(
                 {
                  //Register 0x47 (71)
                  act_rst,
                  23'h0,
                  //Register 0x46 (70)
                  24'h0,
                  //Register 0x45 (69)
                  24'h0,
                  //Register 0x44 (68)
                  24'h0,
                  //Register 0x43 (67)
                  24'h0,
                  //Register 0x42 (66)
                  24'h0,
                  //Register 0x41 (65)
                  24'h0,
                  //Register 0x40 (64)
                  24'h0,
                  //Register 0x3F (63)
                  24'h0,
                  //Register 0x3E (62)
                  24'h0,
                  //Register 0x3D (61)
                  24'h0,
                  //Register 0x3C (60)
                  24'h0,
                  //Register 0x3B (59)
                  24'h0,
                  //Register 0x3A (58)
                  blk_wr_en,
                  23'h0,
                  //Register 0x39 (57)
                  24'h0,
                  //Register 0x38 (56)
                  24'h0,
                  //Register 0x37 (55)
                  11'h0,
                  str_wr_ch0_buf_off,
                  //Register 0x36 (54)
                  str_wr_ch0_en,
                  str_wr_ch0_wrp,
                  str_wr_ch0_dblb,
                  8'h0,
                  str_wr_ch0_buf_len,
                  //Register 0x35 (53)
                  str_wr_ch0_alt_reg_wr,
                  16'h0,
                  //Register 0x34 (52)
                  str_wr_ch0_alt_addr,
                  16'h0,
                  //Register 0x33 (51)
                  11'h0,
                  str_wr_ch1_buf_off,
                  //Register 0x32 (50)
                  str_wr_ch1_en,
                  str_wr_ch1_wrp,
                  str_wr_ch1_dblb,
                  8'h0,
                  str_wr_ch1_buf_len,
                  //Register 0x31 (49)
                  str_wr_ch1_alt_reg_wr,
                  16'h0,
                  //Register 0x30 (48)
                  str_wr_ch1_alt_addr,
                  16'h0,
                  //Register 0x2F (47)
                  24'h0,
                  //Register 0x2E (46)
                  24'h0,
                  //Register 0x2D (45)
                  24'h0,
                  //Register 0x2C (44)
                  24'h0,
                  //Register 0x2B (43)
                  24'h0,
                  //Register 0x2A (42)
                  18'h0,
                  flsh_sab,
                  //Register 0x29 (41)
                  24'h0,
                  //Register 0x28 (40)
                  14'h0,
                  flsh_smvct0,
                  flsh_smvct1,
                  //Register 0x27 (39)
                  3'h0,
                  flsh_shve,
                  flsh_shvp,
                  flsh_shvct,
                  flsh_smv,
                  //Register 0x26 (38)
                  4'h0,
                  flsh_spig,
                  flsh_srig,
                  flsh_svr0,
                  flsh_svr1,
                  flsh_svr2,
                  //Register 0x25 (37)
                  24'h0,
                  //Register 0x24 (36)
                  9'h0,
                  flsh_srt4,
                  flsh_srt5,
                  flsh_srt6,
                  //Register 0x23 (35)
                  4'h0,
                  flsh_srt0,
                  flsh_srt1,
                  flsh_srt2,
                  flsh_srt3,
                  //Register 0x22 (34)
                  14'h0,
                  flsh_syt0,
                  flsh_syt1,
                  //Register 0x21 (33)
                  9'h0,
                  flsh_spt0,
                  flsh_spt1,
                  flsh_spt2,
                  //Register 0x20 (32)
                  9'h0,
                  flsh_set0,
                  flsh_set1,
                  flsh_snt,
                  //Register 0x1F (31)
                  23'h0,
                  force_resetn,
                  //Register 0x1E (30)
                  fls2lc_reg_wr_data,
                  //Register 0x1D (29)
                  24'h0,
                  //Register 0x1C (28)
                  24'h0,
                  //Register 0x1B (27)
                  16'h0,
                  irq_payload,
                  //Register 0x1A (26)
                  24'h0,
                  //Register 0x19 (25)
                  12'h0,
                  disable_bypass_mirror,
                  comp_ctrl_i_1stg,
                  comp_ctrl_i_2stg_bar,
                  comp_ctrl_vout,
                  //Register 0x18 (24)
                  18'h0,
                  clk_ring_sel,
                  clk_div_sel,
                  //Register 0x17 (23)
                  pp_flag_end_of_flash,
                  pp_flag_str_limit,
                  pp_flag_copy_limit,
                  2'h0,
                  pp_length_copied,
                  //Register 0x16 (22)
                  5'h0,
                  pp_length_streamed,
                  //Register 0x15 (21)
                  6'h0,
                  pp_flsh_addr,
                  //Register 0x14 (20)
                  19'h0,
                  pp_no_err_detection,
                  pp_use_fast_prog,
                  pp_wrap,
                  pp_bit_en_ext,
                  //Register 0x13 (19)
                  4'h0,
                  pp_str_limit,
                  pp_str_en,
                  //Register 0x12 (18)
                  17'h0,
                  irq_pwr_on_wup,
                  sel_pwr_on_wup,
                  flash_auto_use_custom,
                  flash_auto_off,
                  flash_auto_on,
                  //Register 0x11 (17)
                  18'h0,
                  flash_power_do_vrefcomp,
                  1'h0,
                  flash_power_do_flsh,
                  flash_power_irq_en,
                  flash_power_sel_on,
                  flash_power_go,
                  //Register 0x10 (16)
                  1'h0,
                  boot_flag_sleep,
                  boot_flag_ecc_error,
                  boot_flag_wrong_header,
                  boot_flag_pwdn,
                  boot_flag_invalid_cmnd,
                  boot_flag_chksum_error,
                  boot_flag_success,
                  14'h0,
                  boot_reg_pattern,
                  //Register 0x0F (15)
                  8'h0,
                  int_rply_short_addr,
                  int_rply_reg_addr,
                  //Register 0x0E (14)
                  11'h0,
                  sram_start_addr_ext,
                  //Register 0x0D (13)
                  4'h0,
                  timeout_ext,
                  //Register 0x0C (12)
                  20'h0,
                  wrap_ext,
                  update_addr_ext,
                  bit_en_ext,
                  //Register 0x0B (11)
                  24'h0,
                  //Register 0x0A (10)
                  19'h0,
                  vref_sleep,
                  comp_sleep,
                  comp_clkenb,
                  comp_isol,
                  1'h0,
                  //Register 0x09 (9)
                  5'h0,
                  length,
                  irq_en,
                  cmd,
                  go,
                  //Register 0x08 (8)
                  6'h0,
                  flsh_start_addr,
                  //Register 0x07 (7)
                  11'h0,
                  sram_start_addr,
                  //Register 0x06 (6)
                  7'h0,
                  tvref,
                  //Register 0x05 (5)
                  4'h0,
                  tcap,
                  //Register 0x04 (4)
                  tmvcp_en,
                  tsc_en,
                  //Register 0x03 (3)
                  thvcp_en,
                  tben,
                  //Register 0x02 (2)
                  8'h0,
                  terase,
                  //Register 0x01 (1)
                  tcyc_prog,
                  tprog,
                  //Register 0x00 (0)
                  tcyc_read,
                  t3us,
                  t5us,
                  t10us
                 }
                ),
