//*******************************************************************************************
// Description:    Netlist for FLPv3L's MBus Register File
//     Generated by genRF (Version 1.01) 08/25/2017 00:09:00
//*******************************************************************************************

//*******************************************************************************************
// MEMORY MAP
//*******************************************************************************************
// MBUS ADDR     || Register Name                         || Reset Value || Type || Comments 
//*******************************************************************************************
// 8'h00         || REGISTER 0x00 (  0)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h00 [23:19] || Tcyc_read                             ||  5'h1F      ||  W/R || Default: ~30us
// 8'h00 [18:13] || T3us                                  ||  6'h02      ||  W/R || Default: ~3us
// 8'h00 [12: 7] || T5us                                  ||  6'h04      ||  W/R || Default: ~5us
// 8'h00 [ 6: 0] || T10us                                 ||  7'h09      ||  W/R || Default: ~10us
//*******************************************************************************************
// 8'h01         || REGISTER 0x01 (  1)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h01 [23: 8] || Tcyc_prog                             || 16'h007F    ||  W/R || Default: ~128us
// 8'h01 [ 7: 0] || Tprog                                 ||  8'h09      ||  W/R || Default: ~10us
//*******************************************************************************************
// 8'h02         || REGISTER 0x02 (  2)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h02 [15: 0] || Terase                                || 16'h0100    ||  W/R || Default: ~256us
//*******************************************************************************************
// 8'h03         || REGISTER 0x03 (  3)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h03 [23:10] || Thvcp_en                              || 14'h03E8    ||  W/R || Default: ~1ms
// 8'h03 [ 9: 0] || Tben                                  || 10'h031     ||  W/R || Default: ~50us
//*******************************************************************************************
// 8'h04         || REGISTER 0x04 (  4)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h04 [23:12] || Tmvcp_en                              || 12'h3E8     ||  W/R || Default: ~1ms
// 8'h04 [11: 0] || Tsc_en                                || 12'h3E8     ||  W/R || Default: ~1ms
//*******************************************************************************************
// 8'h05         || REGISTER 0x05 (  5)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h05 [19: 0] || Tcap                                  || 20'h007CF   ||  W/R || Default: ~2ms
//*******************************************************************************************
// 8'h06         || REGISTER 0x06 (  6)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h06 [16: 0] || Tvref                                 || 17'h01F3F   ||  W/R || Default: ~8ms
//*******************************************************************************************
// 8'h07         || REGISTER 0x07 (  7)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h07 [12: 0] || SRAM_START_ADDR                       || 13'h0000    ||  LC  || 
//*******************************************************************************************
// 8'h08         || REGISTER 0x08 (  8)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h08 [17: 0] || FLSH_START_ADDR                       || 18'h00000   ||  LC  || 
//*******************************************************************************************
// 8'h09         || REGISTER 0x09 (  9)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h09 [18: 6] || LENGTH                                || 13'h0000    ||  LC  || 
// 8'h09 [    5] || IRQ_EN                                ||  1'h0       ||  LC  || 
// 8'h09 [ 4: 1] || CMD                                   ||  4'h0       ||  LC  || 
// 8'h09 [    0] || GO                                    ||  1'h0       ||  LC  || 
//*******************************************************************************************
// 8'h0A         || REGISTER 0x0A ( 10)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h0A [    4] || VREF_SLEEP                            ||  1'h1       ||  W/R || 
// 8'h0A [    3] || COMP_SLEEP                            ||  1'h1       ||  W/R || 
// 8'h0A [    2] || COMP_CLKENB                           ||  1'h1       ||  W/R || 
// 8'h0A [    1] || COMP_ISOL                             ||  1'h1       ||  W/R || 
//*******************************************************************************************
// 8'h0B         || REGISTER 0x0B ( 11)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h0C         || REGISTER 0x0C ( 12)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h0C [    3] || WRAP_EXT                              ||  1'h0       ||  W/R || 
// 8'h0C [    2] || UPDATE_ADDR_EXT                       ||  1'h0       ||  W/R || 
// 8'h0C [ 1: 0] || BIT_EN_EXT                            ||  2'h1       ||  W/R || 
//*******************************************************************************************
// 8'h0D         || REGISTER 0x0D ( 13)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h0D [19: 0] || TIMEOUT_EXT                           || 20'hFFFFF   ||  W/R || 0 means no time-limit
//*******************************************************************************************
// 8'h0E         || REGISTER 0x0E ( 14)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h0E [12: 0] || SRAM_START_ADDR_EXT                   || 13'h0000    ||  W/R || will be updated at the end of Ext Streaming
//*******************************************************************************************
// 8'h0F         || REGISTER 0x0F ( 15)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h0F [15: 8] || INT_RPLY_SHORT_ADDR                   ||  8'h10      ||  W/R || 
// 8'h0F [ 7: 0] || INT_RPLY_REG_ADDR                     ||  8'h00      ||  W/R || 
//*******************************************************************************************
// 8'h10         || REGISTER 0x10 ( 16)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h10 [   22] || BOOT_FLAG_SLEEP                       ||  1'h0       ||  W/R || 
// 8'h10 [   21] || BOOT_FLAG_ECC_ERROR                   ||  1'h0       ||  W/R || 
// 8'h10 [   20] || BOOT_FLAG_WRONG_HEADER                ||  1'h0       ||  W/R || 
// 8'h10 [   19] || BOOT_FLAG_PWDN                        ||  1'h0       ||  W/R || 
// 8'h10 [   18] || BOOT_FLAG_INVALID_CMND                ||  1'h0       ||  W/R || 
// 8'h10 [   17] || BOOT_FLAG_CHKSUM_ERROR                ||  1'h0       ||  W/R || 
// 8'h10 [   16] || BOOT_FLAG_SUCCESS                     ||  1'h0       ||  W/R || 
// 8'h10 [ 1: 0] || BOOT_REG_PATTERN                      ||  2'h0       ||  W/R || 
//*******************************************************************************************
// 8'h11         || REGISTER 0x11 ( 17)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h11 [    5] || FLASH_POWER_DO_VREFCOMP               ||  1'h1       ||  W/R || 
// 8'h11 [    3] || FLASH_POWER_DO_FLSH                   ||  1'h1       ||  W/R || 
// 8'h11 [    2] || FLASH_POWER_IRQ_EN                    ||  1'h1       ||  W/R || 
// 8'h11 [    1] || FLASH_POWER_SEL_ON                    ||  1'h1       ||  W/R || 1: Turn-On, 0: Turn-Off
// 8'h11 [    0] || FLASH_POWER_GO                        ||  1'h0       ||  W/R || 
//*******************************************************************************************
// 8'h12         || REGISTER 0x12 ( 18)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h12 [    6] || IRQ_PWR_ON_WUP                        ||  1'h0       ||  W/R || If 1, FSM will sends an IRQ when it's powering up the flash upon wake-up
// 8'h12 [ 5: 3] || SEL_PWR_ON_WUP                        ||  3'h0       ||  W/R || 0: disable, 1: vclmt, 2: vclmt/lcap, 3: vclmt/flsh, 4: vclmt/flsh/lcap
// 8'h12 [    2] || FLASH_AUTO_USE_CUSTOM                 ||  1'h0       ||  W/R || If 1, Flash Auto-On/Off will use the setting in FLASH_POWER_DO_X
// 8'h12 [    1] || FLASH_AUTO_OFF                        ||  1'h0       ||  W/R || If 1, FSM will turn off Flash once finishing a GO operation or ping-pong streaming
// 8'h12 [    0] || FLASH_AUTO_ON                         ||  1'h0       ||  W/R || If 1, FSM will turn on Flash before starting a GO operation
//*******************************************************************************************
// 8'h13         || REGISTER 0x13 ( 19)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h13 [19: 1] || PP_STR_LIMIT                          || 19'h00000   ||  LC  || Limit the number of words streamed. 0 means no-limit.
// 8'h13 [    0] || PP_STR_EN                             ||  1'h0       ||  LC  || Ping-Pong Straming Enable
//*******************************************************************************************
// 8'h14         || REGISTER 0x14 ( 20)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h14 [    4] || PP_NO_ERR_DETECTION                   ||  1'h0       ||  W/R || If 1, it does not detect buffer_overrun error. Other errors can be stil detected, though.
// 8'h14 [    3] || PP_USE_FAST_PROG                      ||  1'h0       ||  W/R || If 1, hold flsh_prog and flsh_nvstr during the whole page program
// 8'h14 [    2] || PP_WRAP                               ||  1'h0       ||  W/R || If 1, PP_FLSH_ADDR will wrap around
// 8'h14 [ 1: 0] || PP_BIT_EN_EXT                         ||  2'h1       ||  W/R || 
//*******************************************************************************************
// 8'h15         || REGISTER 0x15 ( 21)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h15 [17: 0] || PP_FLSH_ADDR                          || 18'h00000   ||  W/R || 
//*******************************************************************************************
// 8'h16         || REGISTER 0x16 ( 22)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h16 [18: 0] || PP_LENGTH_STREAMED                    || 19'h00000   ||  LC  || Number of words received during Ping-Pong Streaming
//*******************************************************************************************
// 8'h17         || REGISTER 0x17 ( 23)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h17 [   23] || PP_FLAG_END_OF_FLASH                  ||  1'h0       ||  LC  || 
// 8'h17 [   22] || PP_FLAG_STR_LIMIT                     ||  1'h0       ||  LC  || 
// 8'h17 [   21] || PP_FLAG_COPY_LIMIT                    ||  1'h0       ||  LC  || 
// 8'h17 [18: 0] || PP_LENGTH_COPIED                      || 19'h00000   ||  LC  || Number of words copied to Flash during Ping-Pong Streaming
//*******************************************************************************************
// 8'h18         || REGISTER 0x18 ( 24)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h18 [ 5: 2] || CLK_RING_SEL                          ||  4'hC       ||  W/R || 
// 8'h18 [ 1: 0] || CLK_DIV_SEL                           ||  2'h1       ||  W/R || 
//*******************************************************************************************
// 8'h19         || REGISTER 0x19 ( 25)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h19 [   11] || DISABLE_BYPASS_MIRROR                 ||  1'h1       ||  W/R || 
// 8'h19 [10: 7] || COMP_CTRL_I_1STG                      ||  4'h8       ||  W/R || 
// 8'h19 [ 6: 3] || COMP_CTRL_I_2STG_BAR                  ||  4'h0       ||  W/R || 
// 8'h19 [ 2: 0] || COMP_CTRL_VOUT                        ||  3'h3       ||  W/R || 
//*******************************************************************************************
// 8'h1A         || REGISTER 0x1A ( 26)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1B         || REGISTER 0x1B ( 27)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h1B [ 7: 0] || IRQ_PAYLOAD                           ||  8'h00      ||   R  || 
//*******************************************************************************************
// 8'h1C         || REGISTER 0x1C ( 28)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1D         || REGISTER 0x1D ( 29)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h1E         || REGISTER 0x1E ( 30)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h1E [23: 0] || FLS2LC_REG_WR_DATA                    || 24'h000000  ||   R  || 
//*******************************************************************************************
// 8'h1F         || REGISTER 0x1F ( 31)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h1F [    0] || FORCE_RESETN                          ||  1'h1       ||  W/R || If 0, FLPv3L_CTRL will be immediately reset (Asynchronous). Release of RESET does not do anything regardless of SEL_PWR_ON_WUP setting
//*******************************************************************************************
// 8'h20         || REGISTER 0x20 ( 32)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h20 [14:10] || FLSH_SET0                             ||  5'h04      ||  W/R || 
// 8'h20 [ 9: 5] || FLSH_SET1                             ||  5'h04      ||  W/R || 
// 8'h20 [ 4: 0] || FLSH_SNT                              ||  5'h07      ||  W/R || 
//*******************************************************************************************
// 8'h21         || REGISTER 0x21 ( 33)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h21 [14:10] || FLSH_SPT0                             ||  5'h04      ||  W/R || 
// 8'h21 [ 9: 5] || FLSH_SPT1                             ||  5'h04      ||  W/R || 
// 8'h21 [ 4: 0] || FLSH_SPT2                             ||  5'h04      ||  W/R || 
//*******************************************************************************************
// 8'h22         || REGISTER 0x22 ( 34)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h22 [ 9: 5] || FLSH_SYT0                             ||  5'h07      ||  W/R || 
// 8'h22 [ 4: 0] || FLSH_SYT1                             ||  5'h07      ||  W/R || 
//*******************************************************************************************
// 8'h23         || REGISTER 0x23 ( 35)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h23 [19:15] || FLSH_SRT0                             ||  5'h01      ||  W/R || 
// 8'h23 [14:10] || FLSH_SRT1                             ||  5'h03      ||  W/R || 
// 8'h23 [ 9: 5] || FLSH_SRT2                             ||  5'h03      ||  W/R || 
// 8'h23 [ 4: 0] || FLSH_SRT3                             ||  5'h07      ||  W/R || 
//*******************************************************************************************
// 8'h24         || REGISTER 0x24 ( 36)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h24 [14:10] || FLSH_SRT4                             ||  5'h07      ||  W/R || 
// 8'h24 [ 9: 5] || FLSH_SRT5                             ||  5'h07      ||  W/R || 
// 8'h24 [ 4: 0] || FLSH_SRT6                             ||  5'h01      ||  W/R || 
//*******************************************************************************************
// 8'h25         || REGISTER 0x25 ( 37)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h26         || REGISTER 0x26 ( 38)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h26 [19:16] || FLSH_SPIG                             ||  4'hD       ||  W/R || 
// 8'h26 [15:12] || FLSH_SRIG                             ||  4'h7       ||  W/R || 
// 8'h26 [11: 8] || FLSH_SVR0                             ||  4'h7       ||  W/R || 
// 8'h26 [ 7: 4] || FLSH_SVR1                             ||  4'h8       ||  W/R || 
// 8'h26 [ 3: 0] || FLSH_SVR2                             ||  4'h8       ||  W/R || 
//*******************************************************************************************
// 8'h27         || REGISTER 0x27 ( 39)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h27 [20:16] || FLSH_SHVE                             ||  5'h01      ||  W/R || 
// 8'h27 [15:11] || FLSH_SHVP                             ||  5'h03      ||  W/R || 
// 8'h27 [10: 6] || FLSH_SHVCT                            ||  5'h0F      ||  W/R || 
// 8'h27 [ 5: 0] || FLSH_SMV                              ||  6'h08      ||  W/R || 
//*******************************************************************************************
// 8'h28         || REGISTER 0x28 ( 40)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h28 [ 9: 5] || FLSH_SMVCT0                           ||  5'h07      ||  W/R || 
// 8'h28 [ 4: 0] || FLSH_SMVCT1                           ||  5'h07      ||  W/R || 
//*******************************************************************************************
// 8'h29         || REGISTER 0x29 ( 41)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h2A         || REGISTER 0x2A ( 42)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h2A [ 5: 0] || FLSH_SAB                              ||  6'h02      ||  W/R || 
//*******************************************************************************************
// 8'h2B         || REGISTER 0x2B ( 43)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h2C         || REGISTER 0x2C ( 44)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h2D         || REGISTER 0x2D ( 45)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h2E         || REGISTER 0x2E ( 46)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h2F         || REGISTER 0x2F ( 47)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h30         || REGISTER 0x30 ( 48)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h30 [23:16] || STR_WR_CH1_ALT_ADDR                   ||  8'hF0      ||  W/R || Alert is suppressed by default
//*******************************************************************************************
// 8'h31         || REGISTER 0x31 ( 49)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h31 [23:16] || STR_WR_CH1_ALT_REG_WR                 ||  8'h00      ||  W/R || 
//*******************************************************************************************
// 8'h32         || REGISTER 0x32 ( 50)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h32 [   23] || STR_WR_CH1_EN                         ||  1'h1       ||  W/R || Streaming is enabled by default
// 8'h32 [   22] || STR_WR_CH1_WRP                        ||  1'h1       ||  W/R || Wrapping is enabled by default
// 8'h32 [   21] || STR_WR_CH1_DBLB                       ||  1'h0       ||  W/R || Double Buffer is disabled by default
// 8'h32 [12: 0] || STR_WR_CH1_BUF_LEN                    || 13'h1FFF    ||  W/R || 32kB = 8192 Words = (0x1FFF + 1)
//*******************************************************************************************
// 8'h33         || REGISTER 0x33 ( 51)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h33 [12: 0] || STR_WR_CH1_BUF_OFF                    || 13'h0000    ||  W/R || 
//*******************************************************************************************
// 8'h34         || REGISTER 0x34 ( 52)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h34 [23:16] || STR_WR_CH0_ALT_ADDR                   ||  8'hF0      ||  W/R || Alert is suppressed by default
//*******************************************************************************************
// 8'h35         || REGISTER 0x35 ( 53)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h35 [23:16] || STR_WR_CH0_ALT_REG_WR                 ||  8'h00      ||  W/R || 
//*******************************************************************************************
// 8'h36         || REGISTER 0x36 ( 54)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h36 [   23] || STR_WR_CH0_EN                         ||  1'h1       ||  W/R || Streaming is enabled by default
// 8'h36 [   22] || STR_WR_CH0_WRP                        ||  1'h1       ||  W/R || Wrapping is enabled by default
// 8'h36 [   21] || STR_WR_CH0_DBLB                       ||  1'h0       ||  W/R || Double Buffer is disabled by default
// 8'h36 [12: 0] || STR_WR_CH0_BUF_LEN                    || 13'h1FFF    ||  W/R || 32kB = 8192 Words = (0x1FFF + 1)
//*******************************************************************************************
// 8'h37         || REGISTER 0x37 ( 55)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h37 [12: 0] || STR_WR_CH0_BUF_OFF                    || 13'h0000    ||  W/R || 
//*******************************************************************************************
// 8'h38         || REGISTER 0x38 ( 56)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h39         || REGISTER 0x39 ( 57)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h3A         || REGISTER 0x3A ( 58)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h3A [   23] || BLK_WR_EN                             ||  1'h1       ||  W/R || 
//*******************************************************************************************
// 8'h3B         || REGISTER 0x3B ( 59)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h3C         || REGISTER 0x3C ( 60)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h3D         || REGISTER 0x3D ( 61)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h3E         || REGISTER 0x3E ( 62)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h3F         || REGISTER 0x3F ( 63)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h40         || REGISTER 0x40 ( 64)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h41         || REGISTER 0x41 ( 65)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h42         || REGISTER 0x42 ( 66)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h43         || REGISTER 0x43 ( 67)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h44         || REGISTER 0x44 ( 68)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h45         || REGISTER 0x45 ( 69)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h46         || REGISTER 0x46 ( 70)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
//               !!--- EMPTY REGISTER ---!!               ||             ||      ||
//*******************************************************************************************
// 8'h47         || REGISTER 0x47 ( 71)                   ||             ||      ||           
//-------------------------------------------------------------------------------------------
// 8'h47 [   23] || ACT_RST                               ||  1'h0       ||  W/R || 
//*******************************************************************************************

module flpv3l_rf (
   //Input
    input         RESETn,
    input         ISOLATE,
    input [ 71:0] ADDR_IN,
    input [ 23:0] DATA_IN,
   //Output
    //Register 0x00 (  0)
    output [ 4:0] Tcyc_read,
    output [ 5:0] T3us,
    output [ 5:0] T5us,
    output [ 6:0] T10us,
    //Register 0x01 (  1)
    output [15:0] Tcyc_prog,
    output [ 7:0] Tprog,
    //Register 0x02 (  2)
    output [15:0] Terase,
    //Register 0x03 (  3)
    output [13:0] Thvcp_en,
    output [ 9:0] Tben,
    //Register 0x04 (  4)
    output [11:0] Tmvcp_en,
    output [11:0] Tsc_en,
    //Register 0x05 (  5)
    output [19:0] Tcap,
    //Register 0x06 (  6)
    output [16:0] Tvref,
    //Register 0x07 (  7)
    //output [12:0] SRAM_START_ADDR, // LAYER-CTRL
    //Register 0x08 (  8)
    //output [17:0] FLSH_START_ADDR, // LAYER-CTRL
    //Register 0x09 (  9)
    //output [12:0] LENGTH, // LAYER-CTRL
    //output        IRQ_EN, // LAYER-CTRL
    //output [ 3:0] CMD, // LAYER-CTRL
    //output        GO, // LAYER-CTRL
    //Register 0x0A ( 10)
    output        VREF_SLEEP,
    output        COMP_SLEEP,
    output        COMP_CLKENB,
    output        COMP_CLKEN, // Inverted Signal of COMP_CLKENB
    output        COMP_ISOL,
    //Register 0x0C ( 12)
    output        WRAP_EXT,
    output        UPDATE_ADDR_EXT,
    output [ 1:0] BIT_EN_EXT,
    //Register 0x0D ( 13)
    output [19:0] TIMEOUT_EXT,
    //Register 0x0E ( 14)
    output [12:0] SRAM_START_ADDR_EXT,
    //Register 0x0F ( 15)
    output [ 7:0] INT_RPLY_SHORT_ADDR,
    output [ 7:0] INT_RPLY_REG_ADDR,
    //Register 0x10 ( 16)
    output        BOOT_FLAG_SLEEP,
    output        BOOT_FLAG_ECC_ERROR,
    output        BOOT_FLAG_WRONG_HEADER,
    output        BOOT_FLAG_PWDN,
    output        BOOT_FLAG_INVALID_CMND,
    output        BOOT_FLAG_CHKSUM_ERROR,
    output        BOOT_FLAG_SUCCESS,
    output [ 1:0] BOOT_REG_PATTERN,
    //Register 0x11 ( 17)
    output        FLASH_POWER_DO_VREFCOMP,
    output        FLASH_POWER_DO_FLSH,
    output        FLASH_POWER_IRQ_EN,
    output        FLASH_POWER_SEL_ON,
    output        FLASH_POWER_GO,
    //Register 0x12 ( 18)
    output        IRQ_PWR_ON_WUP,
    output [ 2:0] SEL_PWR_ON_WUP,
    output        FLASH_AUTO_USE_CUSTOM,
    output        FLASH_AUTO_OFF,
    output        FLASH_AUTO_ON,
    //Register 0x13 ( 19)
    //output [18:0] PP_STR_LIMIT, // LAYER-CTRL
    //output        PP_STR_EN, // LAYER-CTRL
    //Register 0x14 ( 20)
    output        PP_NO_ERR_DETECTION,
    output        PP_USE_FAST_PROG,
    output        PP_WRAP,
    output [ 1:0] PP_BIT_EN_EXT,
    //Register 0x15 ( 21)
    output [17:0] PP_FLSH_ADDR,
    //Register 0x16 ( 22)
    //output [18:0] PP_LENGTH_STREAMED, // LAYER-CTRL
    //Register 0x17 ( 23)
    //output        PP_FLAG_END_OF_FLASH, // LAYER-CTRL
    //output        PP_FLAG_STR_LIMIT, // LAYER-CTRL
    //output        PP_FLAG_COPY_LIMIT, // LAYER-CTRL
    //output [18:0] PP_LENGTH_COPIED, // LAYER-CTRL
    //Register 0x18 ( 24)
    output [ 3:0] CLK_RING_SEL,
    output [ 1:0] CLK_DIV_SEL,
    //Register 0x19 ( 25)
    output        DISABLE_BYPASS_MIRROR,
    output [ 3:0] COMP_CTRL_I_1STG,
    output [ 3:0] COMP_CTRL_I_2STG_BAR,
    output [ 2:0] COMP_CTRL_VOUT,
    //Register 0x1B ( 27)
    //output [ 7:0] IRQ_PAYLOAD, // READ-ONLY
    //Register 0x1E ( 30)
    //output [23:0] FLS2LC_REG_WR_DATA, // READ-ONLY
    //Register 0x1F ( 31)
    output        FORCE_RESETN,
    //Register 0x20 ( 32)
    output [ 4:0] FLSH_SET0,
    output [ 4:0] FLSH_SET1,
    output [ 4:0] FLSH_SNT,
    //Register 0x21 ( 33)
    output [ 4:0] FLSH_SPT0,
    output [ 4:0] FLSH_SPT1,
    output [ 4:0] FLSH_SPT2,
    //Register 0x22 ( 34)
    output [ 4:0] FLSH_SYT0,
    output [ 4:0] FLSH_SYT1,
    //Register 0x23 ( 35)
    output [ 4:0] FLSH_SRT0,
    output [ 4:0] FLSH_SRT1,
    output [ 4:0] FLSH_SRT2,
    output [ 4:0] FLSH_SRT3,
    //Register 0x24 ( 36)
    output [ 4:0] FLSH_SRT4,
    output [ 4:0] FLSH_SRT5,
    output [ 4:0] FLSH_SRT6,
    //Register 0x26 ( 38)
    output [ 3:0] FLSH_SPIG,
    output [ 3:0] FLSH_SRIG,
    output [ 3:0] FLSH_SVR0,
    output [ 3:0] FLSH_SVR1,
    output [ 3:0] FLSH_SVR2,
    //Register 0x27 ( 39)
    output [ 4:0] FLSH_SHVE,
    output [ 4:0] FLSH_SHVP,
    output [ 4:0] FLSH_SHVCT,
    output [ 5:0] FLSH_SMV,
    //Register 0x28 ( 40)
    output [ 4:0] FLSH_SMVCT0,
    output [ 4:0] FLSH_SMVCT1,
    //Register 0x2A ( 42)
    output [ 5:0] FLSH_SAB,
    //Register 0x30 ( 48)
    output [ 7:0] STR_WR_CH1_ALT_ADDR,
    //Register 0x31 ( 49)
    output [ 7:0] STR_WR_CH1_ALT_REG_WR,
    //Register 0x32 ( 50)
    output        STR_WR_CH1_EN,
    output        STR_WR_CH1_WRP,
    output        STR_WR_CH1_DBLB,
    output [12:0] STR_WR_CH1_BUF_LEN,
    //Register 0x33 ( 51)
    output [12:0] STR_WR_CH1_BUF_OFF,
    //Register 0x34 ( 52)
    output [ 7:0] STR_WR_CH0_ALT_ADDR,
    //Register 0x35 ( 53)
    output [ 7:0] STR_WR_CH0_ALT_REG_WR,
    //Register 0x36 ( 54)
    output        STR_WR_CH0_EN,
    output        STR_WR_CH0_WRP,
    output        STR_WR_CH0_DBLB,
    output [12:0] STR_WR_CH0_BUF_LEN,
    //Register 0x37 ( 55)
    output [12:0] STR_WR_CH0_BUF_OFF,
    //Register 0x3A ( 58)
    output        BLK_WR_EN,
    //Register 0x47 ( 71)
    output        ACT_RST
   );

   //Internal Wires
    wire         isolate_n;
    wire [ 71:0] addr_in_iso;
    wire [ 71:0] addr_in_iso_buf;
    wire [ 23:0] data_in_iso;
    wire [ 23:0] data_in_iso_buf;

   //****************************************************
   // ISOLATE                                            
   //****************************************************
    INVLLX8HVT_TSMC90 ISOLATE_INV_0 (.A(ISOLATE), .Y(isolate_n));

    AND2LLX1HVT_TSMC90 ADDR_IN_AND_071 (.A(isolate_n), .B(ADDR_IN[ 71]), .Y(addr_in_iso[ 71]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_070 (.A(isolate_n), .B(ADDR_IN[ 70]), .Y(addr_in_iso[ 70]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_069 (.A(isolate_n), .B(ADDR_IN[ 69]), .Y(addr_in_iso[ 69]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_068 (.A(isolate_n), .B(ADDR_IN[ 68]), .Y(addr_in_iso[ 68]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_067 (.A(isolate_n), .B(ADDR_IN[ 67]), .Y(addr_in_iso[ 67]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_066 (.A(isolate_n), .B(ADDR_IN[ 66]), .Y(addr_in_iso[ 66]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_065 (.A(isolate_n), .B(ADDR_IN[ 65]), .Y(addr_in_iso[ 65]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_064 (.A(isolate_n), .B(ADDR_IN[ 64]), .Y(addr_in_iso[ 64]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_063 (.A(isolate_n), .B(ADDR_IN[ 63]), .Y(addr_in_iso[ 63]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_062 (.A(isolate_n), .B(ADDR_IN[ 62]), .Y(addr_in_iso[ 62]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_061 (.A(isolate_n), .B(ADDR_IN[ 61]), .Y(addr_in_iso[ 61]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_060 (.A(isolate_n), .B(ADDR_IN[ 60]), .Y(addr_in_iso[ 60]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_059 (.A(isolate_n), .B(ADDR_IN[ 59]), .Y(addr_in_iso[ 59]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_058 (.A(isolate_n), .B(ADDR_IN[ 58]), .Y(addr_in_iso[ 58]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_057 (.A(isolate_n), .B(ADDR_IN[ 57]), .Y(addr_in_iso[ 57]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_056 (.A(isolate_n), .B(ADDR_IN[ 56]), .Y(addr_in_iso[ 56]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_055 (.A(isolate_n), .B(ADDR_IN[ 55]), .Y(addr_in_iso[ 55]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_054 (.A(isolate_n), .B(ADDR_IN[ 54]), .Y(addr_in_iso[ 54]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_053 (.A(isolate_n), .B(ADDR_IN[ 53]), .Y(addr_in_iso[ 53]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_052 (.A(isolate_n), .B(ADDR_IN[ 52]), .Y(addr_in_iso[ 52]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_051 (.A(isolate_n), .B(ADDR_IN[ 51]), .Y(addr_in_iso[ 51]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_050 (.A(isolate_n), .B(ADDR_IN[ 50]), .Y(addr_in_iso[ 50]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_049 (.A(isolate_n), .B(ADDR_IN[ 49]), .Y(addr_in_iso[ 49]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_048 (.A(isolate_n), .B(ADDR_IN[ 48]), .Y(addr_in_iso[ 48]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_047 (.A(isolate_n), .B(ADDR_IN[ 47]), .Y(addr_in_iso[ 47]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_046 (.A(isolate_n), .B(ADDR_IN[ 46]), .Y(addr_in_iso[ 46]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_045 (.A(isolate_n), .B(ADDR_IN[ 45]), .Y(addr_in_iso[ 45]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_044 (.A(isolate_n), .B(ADDR_IN[ 44]), .Y(addr_in_iso[ 44]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_043 (.A(isolate_n), .B(ADDR_IN[ 43]), .Y(addr_in_iso[ 43]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_042 (.A(isolate_n), .B(ADDR_IN[ 42]), .Y(addr_in_iso[ 42]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_041 (.A(isolate_n), .B(ADDR_IN[ 41]), .Y(addr_in_iso[ 41]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_040 (.A(isolate_n), .B(ADDR_IN[ 40]), .Y(addr_in_iso[ 40]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_039 (.A(isolate_n), .B(ADDR_IN[ 39]), .Y(addr_in_iso[ 39]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_038 (.A(isolate_n), .B(ADDR_IN[ 38]), .Y(addr_in_iso[ 38]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_037 (.A(isolate_n), .B(ADDR_IN[ 37]), .Y(addr_in_iso[ 37]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_036 (.A(isolate_n), .B(ADDR_IN[ 36]), .Y(addr_in_iso[ 36]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_035 (.A(isolate_n), .B(ADDR_IN[ 35]), .Y(addr_in_iso[ 35]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_034 (.A(isolate_n), .B(ADDR_IN[ 34]), .Y(addr_in_iso[ 34]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_033 (.A(isolate_n), .B(ADDR_IN[ 33]), .Y(addr_in_iso[ 33]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_032 (.A(isolate_n), .B(ADDR_IN[ 32]), .Y(addr_in_iso[ 32]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_031 (.A(isolate_n), .B(ADDR_IN[ 31]), .Y(addr_in_iso[ 31]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_030 (.A(isolate_n), .B(ADDR_IN[ 30]), .Y(addr_in_iso[ 30]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_029 (.A(isolate_n), .B(ADDR_IN[ 29]), .Y(addr_in_iso[ 29]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_028 (.A(isolate_n), .B(ADDR_IN[ 28]), .Y(addr_in_iso[ 28]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_027 (.A(isolate_n), .B(ADDR_IN[ 27]), .Y(addr_in_iso[ 27]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_026 (.A(isolate_n), .B(ADDR_IN[ 26]), .Y(addr_in_iso[ 26]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_025 (.A(isolate_n), .B(ADDR_IN[ 25]), .Y(addr_in_iso[ 25]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_024 (.A(isolate_n), .B(ADDR_IN[ 24]), .Y(addr_in_iso[ 24]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_023 (.A(isolate_n), .B(ADDR_IN[ 23]), .Y(addr_in_iso[ 23]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_022 (.A(isolate_n), .B(ADDR_IN[ 22]), .Y(addr_in_iso[ 22]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_021 (.A(isolate_n), .B(ADDR_IN[ 21]), .Y(addr_in_iso[ 21]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_020 (.A(isolate_n), .B(ADDR_IN[ 20]), .Y(addr_in_iso[ 20]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_019 (.A(isolate_n), .B(ADDR_IN[ 19]), .Y(addr_in_iso[ 19]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_018 (.A(isolate_n), .B(ADDR_IN[ 18]), .Y(addr_in_iso[ 18]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_017 (.A(isolate_n), .B(ADDR_IN[ 17]), .Y(addr_in_iso[ 17]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_016 (.A(isolate_n), .B(ADDR_IN[ 16]), .Y(addr_in_iso[ 16]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_015 (.A(isolate_n), .B(ADDR_IN[ 15]), .Y(addr_in_iso[ 15]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_014 (.A(isolate_n), .B(ADDR_IN[ 14]), .Y(addr_in_iso[ 14]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_013 (.A(isolate_n), .B(ADDR_IN[ 13]), .Y(addr_in_iso[ 13]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_012 (.A(isolate_n), .B(ADDR_IN[ 12]), .Y(addr_in_iso[ 12]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_011 (.A(isolate_n), .B(ADDR_IN[ 11]), .Y(addr_in_iso[ 11]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_010 (.A(isolate_n), .B(ADDR_IN[ 10]), .Y(addr_in_iso[ 10]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_009 (.A(isolate_n), .B(ADDR_IN[  9]), .Y(addr_in_iso[  9]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_008 (.A(isolate_n), .B(ADDR_IN[  8]), .Y(addr_in_iso[  8]));
    //AND2LLX1HVT_TSMC90 ADDR_IN_AND_007 (.A(isolate_n), .B(ADDR_IN[  7]), .Y(addr_in_iso[  7]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_006 (.A(isolate_n), .B(ADDR_IN[  6]), .Y(addr_in_iso[  6]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_005 (.A(isolate_n), .B(ADDR_IN[  5]), .Y(addr_in_iso[  5]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_004 (.A(isolate_n), .B(ADDR_IN[  4]), .Y(addr_in_iso[  4]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_003 (.A(isolate_n), .B(ADDR_IN[  3]), .Y(addr_in_iso[  3]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_002 (.A(isolate_n), .B(ADDR_IN[  2]), .Y(addr_in_iso[  2]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_001 (.A(isolate_n), .B(ADDR_IN[  1]), .Y(addr_in_iso[  1]));
    AND2LLX1HVT_TSMC90 ADDR_IN_AND_000 (.A(isolate_n), .B(ADDR_IN[  0]), .Y(addr_in_iso[  0]));

    AND2LLX1HVT_TSMC90 DATA_IN_AND_23 (.A(isolate_n), .B(DATA_IN[23]), .Y(data_in_iso[23]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_22 (.A(isolate_n), .B(DATA_IN[22]), .Y(data_in_iso[22]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_21 (.A(isolate_n), .B(DATA_IN[21]), .Y(data_in_iso[21]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_20 (.A(isolate_n), .B(DATA_IN[20]), .Y(data_in_iso[20]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_19 (.A(isolate_n), .B(DATA_IN[19]), .Y(data_in_iso[19]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_18 (.A(isolate_n), .B(DATA_IN[18]), .Y(data_in_iso[18]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_17 (.A(isolate_n), .B(DATA_IN[17]), .Y(data_in_iso[17]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_16 (.A(isolate_n), .B(DATA_IN[16]), .Y(data_in_iso[16]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_15 (.A(isolate_n), .B(DATA_IN[15]), .Y(data_in_iso[15]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_14 (.A(isolate_n), .B(DATA_IN[14]), .Y(data_in_iso[14]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_13 (.A(isolate_n), .B(DATA_IN[13]), .Y(data_in_iso[13]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_12 (.A(isolate_n), .B(DATA_IN[12]), .Y(data_in_iso[12]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_11 (.A(isolate_n), .B(DATA_IN[11]), .Y(data_in_iso[11]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_10 (.A(isolate_n), .B(DATA_IN[10]), .Y(data_in_iso[10]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_09 (.A(isolate_n), .B(DATA_IN[ 9]), .Y(data_in_iso[ 9]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_08 (.A(isolate_n), .B(DATA_IN[ 8]), .Y(data_in_iso[ 8]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_07 (.A(isolate_n), .B(DATA_IN[ 7]), .Y(data_in_iso[ 7]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_06 (.A(isolate_n), .B(DATA_IN[ 6]), .Y(data_in_iso[ 6]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_05 (.A(isolate_n), .B(DATA_IN[ 5]), .Y(data_in_iso[ 5]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_04 (.A(isolate_n), .B(DATA_IN[ 4]), .Y(data_in_iso[ 4]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_03 (.A(isolate_n), .B(DATA_IN[ 3]), .Y(data_in_iso[ 3]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_02 (.A(isolate_n), .B(DATA_IN[ 2]), .Y(data_in_iso[ 2]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_01 (.A(isolate_n), .B(DATA_IN[ 1]), .Y(data_in_iso[ 1]));
    AND2LLX1HVT_TSMC90 DATA_IN_AND_00 (.A(isolate_n), .B(DATA_IN[ 0]), .Y(data_in_iso[ 0]));

    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_071 (.A(addr_in_iso[ 71]), .Y(addr_in_iso_buf[ 71]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_070 (.A(addr_in_iso[ 70]), .Y(addr_in_iso_buf[ 70]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_069 (.A(addr_in_iso[ 69]), .Y(addr_in_iso_buf[ 69]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_068 (.A(addr_in_iso[ 68]), .Y(addr_in_iso_buf[ 68]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_067 (.A(addr_in_iso[ 67]), .Y(addr_in_iso_buf[ 67]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_066 (.A(addr_in_iso[ 66]), .Y(addr_in_iso_buf[ 66]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_065 (.A(addr_in_iso[ 65]), .Y(addr_in_iso_buf[ 65]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_064 (.A(addr_in_iso[ 64]), .Y(addr_in_iso_buf[ 64]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_063 (.A(addr_in_iso[ 63]), .Y(addr_in_iso_buf[ 63]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_062 (.A(addr_in_iso[ 62]), .Y(addr_in_iso_buf[ 62]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_061 (.A(addr_in_iso[ 61]), .Y(addr_in_iso_buf[ 61]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_060 (.A(addr_in_iso[ 60]), .Y(addr_in_iso_buf[ 60]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_059 (.A(addr_in_iso[ 59]), .Y(addr_in_iso_buf[ 59]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_058 (.A(addr_in_iso[ 58]), .Y(addr_in_iso_buf[ 58]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_057 (.A(addr_in_iso[ 57]), .Y(addr_in_iso_buf[ 57]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_056 (.A(addr_in_iso[ 56]), .Y(addr_in_iso_buf[ 56]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_055 (.A(addr_in_iso[ 55]), .Y(addr_in_iso_buf[ 55]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_054 (.A(addr_in_iso[ 54]), .Y(addr_in_iso_buf[ 54]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_053 (.A(addr_in_iso[ 53]), .Y(addr_in_iso_buf[ 53]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_052 (.A(addr_in_iso[ 52]), .Y(addr_in_iso_buf[ 52]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_051 (.A(addr_in_iso[ 51]), .Y(addr_in_iso_buf[ 51]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_050 (.A(addr_in_iso[ 50]), .Y(addr_in_iso_buf[ 50]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_049 (.A(addr_in_iso[ 49]), .Y(addr_in_iso_buf[ 49]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_048 (.A(addr_in_iso[ 48]), .Y(addr_in_iso_buf[ 48]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_047 (.A(addr_in_iso[ 47]), .Y(addr_in_iso_buf[ 47]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_046 (.A(addr_in_iso[ 46]), .Y(addr_in_iso_buf[ 46]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_045 (.A(addr_in_iso[ 45]), .Y(addr_in_iso_buf[ 45]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_044 (.A(addr_in_iso[ 44]), .Y(addr_in_iso_buf[ 44]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_043 (.A(addr_in_iso[ 43]), .Y(addr_in_iso_buf[ 43]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_042 (.A(addr_in_iso[ 42]), .Y(addr_in_iso_buf[ 42]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_041 (.A(addr_in_iso[ 41]), .Y(addr_in_iso_buf[ 41]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_040 (.A(addr_in_iso[ 40]), .Y(addr_in_iso_buf[ 40]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_039 (.A(addr_in_iso[ 39]), .Y(addr_in_iso_buf[ 39]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_038 (.A(addr_in_iso[ 38]), .Y(addr_in_iso_buf[ 38]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_037 (.A(addr_in_iso[ 37]), .Y(addr_in_iso_buf[ 37]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_036 (.A(addr_in_iso[ 36]), .Y(addr_in_iso_buf[ 36]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_035 (.A(addr_in_iso[ 35]), .Y(addr_in_iso_buf[ 35]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_034 (.A(addr_in_iso[ 34]), .Y(addr_in_iso_buf[ 34]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_033 (.A(addr_in_iso[ 33]), .Y(addr_in_iso_buf[ 33]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_032 (.A(addr_in_iso[ 32]), .Y(addr_in_iso_buf[ 32]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_031 (.A(addr_in_iso[ 31]), .Y(addr_in_iso_buf[ 31]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_030 (.A(addr_in_iso[ 30]), .Y(addr_in_iso_buf[ 30]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_029 (.A(addr_in_iso[ 29]), .Y(addr_in_iso_buf[ 29]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_028 (.A(addr_in_iso[ 28]), .Y(addr_in_iso_buf[ 28]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_027 (.A(addr_in_iso[ 27]), .Y(addr_in_iso_buf[ 27]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_026 (.A(addr_in_iso[ 26]), .Y(addr_in_iso_buf[ 26]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_025 (.A(addr_in_iso[ 25]), .Y(addr_in_iso_buf[ 25]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_024 (.A(addr_in_iso[ 24]), .Y(addr_in_iso_buf[ 24]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_023 (.A(addr_in_iso[ 23]), .Y(addr_in_iso_buf[ 23]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_022 (.A(addr_in_iso[ 22]), .Y(addr_in_iso_buf[ 22]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_021 (.A(addr_in_iso[ 21]), .Y(addr_in_iso_buf[ 21]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_020 (.A(addr_in_iso[ 20]), .Y(addr_in_iso_buf[ 20]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_019 (.A(addr_in_iso[ 19]), .Y(addr_in_iso_buf[ 19]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_018 (.A(addr_in_iso[ 18]), .Y(addr_in_iso_buf[ 18]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_017 (.A(addr_in_iso[ 17]), .Y(addr_in_iso_buf[ 17]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_016 (.A(addr_in_iso[ 16]), .Y(addr_in_iso_buf[ 16]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_015 (.A(addr_in_iso[ 15]), .Y(addr_in_iso_buf[ 15]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_014 (.A(addr_in_iso[ 14]), .Y(addr_in_iso_buf[ 14]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_013 (.A(addr_in_iso[ 13]), .Y(addr_in_iso_buf[ 13]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_012 (.A(addr_in_iso[ 12]), .Y(addr_in_iso_buf[ 12]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_011 (.A(addr_in_iso[ 11]), .Y(addr_in_iso_buf[ 11]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_010 (.A(addr_in_iso[ 10]), .Y(addr_in_iso_buf[ 10]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_009 (.A(addr_in_iso[  9]), .Y(addr_in_iso_buf[  9]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_008 (.A(addr_in_iso[  8]), .Y(addr_in_iso_buf[  8]));
    //BUFLLX4HVT_TSMC90 BUF_ADDR_IN_007 (.A(addr_in_iso[  7]), .Y(addr_in_iso_buf[  7]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_006 (.A(addr_in_iso[  6]), .Y(addr_in_iso_buf[  6]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_005 (.A(addr_in_iso[  5]), .Y(addr_in_iso_buf[  5]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_004 (.A(addr_in_iso[  4]), .Y(addr_in_iso_buf[  4]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_003 (.A(addr_in_iso[  3]), .Y(addr_in_iso_buf[  3]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_002 (.A(addr_in_iso[  2]), .Y(addr_in_iso_buf[  2]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_001 (.A(addr_in_iso[  1]), .Y(addr_in_iso_buf[  1]));
    BUFLLX4HVT_TSMC90 BUF_ADDR_IN_000 (.A(addr_in_iso[  0]), .Y(addr_in_iso_buf[  0]));

    BUFLLX4HVT_TSMC90 BUF_DATA_IN_23 (.A(data_in_iso[23]), .Y(data_in_iso_buf[23]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_22 (.A(data_in_iso[22]), .Y(data_in_iso_buf[22]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_21 (.A(data_in_iso[21]), .Y(data_in_iso_buf[21]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_20 (.A(data_in_iso[20]), .Y(data_in_iso_buf[20]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_19 (.A(data_in_iso[19]), .Y(data_in_iso_buf[19]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_18 (.A(data_in_iso[18]), .Y(data_in_iso_buf[18]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_17 (.A(data_in_iso[17]), .Y(data_in_iso_buf[17]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_16 (.A(data_in_iso[16]), .Y(data_in_iso_buf[16]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_15 (.A(data_in_iso[15]), .Y(data_in_iso_buf[15]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_14 (.A(data_in_iso[14]), .Y(data_in_iso_buf[14]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_13 (.A(data_in_iso[13]), .Y(data_in_iso_buf[13]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_12 (.A(data_in_iso[12]), .Y(data_in_iso_buf[12]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_11 (.A(data_in_iso[11]), .Y(data_in_iso_buf[11]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_10 (.A(data_in_iso[10]), .Y(data_in_iso_buf[10]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_09 (.A(data_in_iso[ 9]), .Y(data_in_iso_buf[ 9]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_08 (.A(data_in_iso[ 8]), .Y(data_in_iso_buf[ 8]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_07 (.A(data_in_iso[ 7]), .Y(data_in_iso_buf[ 7]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_06 (.A(data_in_iso[ 6]), .Y(data_in_iso_buf[ 6]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_05 (.A(data_in_iso[ 5]), .Y(data_in_iso_buf[ 5]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_04 (.A(data_in_iso[ 4]), .Y(data_in_iso_buf[ 4]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_03 (.A(data_in_iso[ 3]), .Y(data_in_iso_buf[ 3]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_02 (.A(data_in_iso[ 2]), .Y(data_in_iso_buf[ 2]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_01 (.A(data_in_iso[ 1]), .Y(data_in_iso_buf[ 1]));
    BUFLLX4HVT_TSMC90 BUF_DATA_IN_00 (.A(data_in_iso[ 0]), .Y(data_in_iso_buf[ 0]));

   //****************************************************
   // REGISTER 0x00 (  0)
   //****************************************************
    //Tcyc_read (5'h1F)
    DFFSNLLX1HVT_TSMC90 Tcyc_read_4 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[23]), .SN(RESETn), .Q(Tcyc_read[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_read_3 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[22]), .SN(RESETn), .Q(Tcyc_read[3]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_read_2 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[21]), .SN(RESETn), .Q(Tcyc_read[2]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_read_1 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[20]), .SN(RESETn), .Q(Tcyc_read[1]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_read_0 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[19]), .SN(RESETn), .Q(Tcyc_read[0]), .QN());
    //T3us (6'h02)
    DFFRNLLX1HVT_TSMC90 T3us_5 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(T3us[5]), .QN());
    DFFRNLLX1HVT_TSMC90 T3us_4 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(T3us[4]), .QN());
    DFFRNLLX1HVT_TSMC90 T3us_3 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(T3us[3]), .QN());
    DFFRNLLX1HVT_TSMC90 T3us_2 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(T3us[2]), .QN());
    DFFSNLLX1HVT_TSMC90 T3us_1 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[14]), .SN(RESETn), .Q(T3us[1]), .QN());
    DFFRNLLX1HVT_TSMC90 T3us_0 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(T3us[0]), .QN());
    //T5us (6'h04)
    DFFRNLLX1HVT_TSMC90 T5us_5 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(T5us[5]), .QN());
    DFFRNLLX1HVT_TSMC90 T5us_4 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(T5us[4]), .QN());
    DFFRNLLX1HVT_TSMC90 T5us_3 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(T5us[3]), .QN());
    DFFSNLLX1HVT_TSMC90 T5us_2 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(T5us[2]), .QN());
    DFFRNLLX1HVT_TSMC90 T5us_1 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(T5us[1]), .QN());
    DFFRNLLX1HVT_TSMC90 T5us_0 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(T5us[0]), .QN());
    //T10us (7'h09)
    DFFRNLLX1HVT_TSMC90 T10us_6 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(T10us[6]), .QN());
    DFFRNLLX1HVT_TSMC90 T10us_5 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(T10us[5]), .QN());
    DFFRNLLX1HVT_TSMC90 T10us_4 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(T10us[4]), .QN());
    DFFSNLLX1HVT_TSMC90 T10us_3 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(T10us[3]), .QN());
    DFFRNLLX1HVT_TSMC90 T10us_2 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(T10us[2]), .QN());
    DFFRNLLX1HVT_TSMC90 T10us_1 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(T10us[1]), .QN());
    DFFSNLLX1HVT_TSMC90 T10us_0 (.CLK(addr_in_iso_buf[0]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(T10us[0]), .QN());

   //****************************************************
   // REGISTER 0x01 (  1)
   //****************************************************
    //Tcyc_prog (16'h007F)
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_15 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(Tcyc_prog[15]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_14 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(Tcyc_prog[14]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_13 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(Tcyc_prog[13]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_12 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(Tcyc_prog[12]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_11 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(Tcyc_prog[11]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_10 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(Tcyc_prog[10]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_9 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(Tcyc_prog[9]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_8 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(Tcyc_prog[8]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcyc_prog_7 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(Tcyc_prog[7]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_6 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[14]), .SN(RESETn), .Q(Tcyc_prog[6]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_5 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[13]), .SN(RESETn), .Q(Tcyc_prog[5]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_4 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(Tcyc_prog[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_3 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(Tcyc_prog[3]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_2 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(Tcyc_prog[2]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_1 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(Tcyc_prog[1]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcyc_prog_0 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(Tcyc_prog[0]), .QN());
    //Tprog (8'h09)
    DFFRNLLX1HVT_TSMC90 Tprog_7 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(Tprog[7]), .QN());
    DFFRNLLX1HVT_TSMC90 Tprog_6 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(Tprog[6]), .QN());
    DFFRNLLX1HVT_TSMC90 Tprog_5 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(Tprog[5]), .QN());
    DFFRNLLX1HVT_TSMC90 Tprog_4 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(Tprog[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tprog_3 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(Tprog[3]), .QN());
    DFFRNLLX1HVT_TSMC90 Tprog_2 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(Tprog[2]), .QN());
    DFFRNLLX1HVT_TSMC90 Tprog_1 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(Tprog[1]), .QN());
    DFFSNLLX1HVT_TSMC90 Tprog_0 (.CLK(addr_in_iso_buf[1]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(Tprog[0]), .QN());

   //****************************************************
   // REGISTER 0x02 (  2)
   //****************************************************
    //Terase (16'h0100)
    DFFRNLLX1HVT_TSMC90 Terase_15 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(Terase[15]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_14 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(Terase[14]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_13 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(Terase[13]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_12 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(Terase[12]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_11 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(Terase[11]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_10 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(Terase[10]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_9 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(Terase[9]), .QN());
    DFFSNLLX1HVT_TSMC90 Terase_8 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(Terase[8]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_7 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(Terase[7]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_6 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(Terase[6]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_5 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(Terase[5]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_4 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(Terase[4]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_3 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(Terase[3]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_2 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(Terase[2]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_1 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(Terase[1]), .QN());
    DFFRNLLX1HVT_TSMC90 Terase_0 (.CLK(addr_in_iso_buf[2]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(Terase[0]), .QN());

   //****************************************************
   // REGISTER 0x03 (  3)
   //****************************************************
    //Thvcp_en (14'h03E8)
    DFFRNLLX1HVT_TSMC90 Thvcp_en_13 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(Thvcp_en[13]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_12 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(Thvcp_en[12]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_11 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(Thvcp_en[11]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_10 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(Thvcp_en[10]), .QN());
    DFFSNLLX1HVT_TSMC90 Thvcp_en_9 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[19]), .SN(RESETn), .Q(Thvcp_en[9]), .QN());
    DFFSNLLX1HVT_TSMC90 Thvcp_en_8 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[18]), .SN(RESETn), .Q(Thvcp_en[8]), .QN());
    DFFSNLLX1HVT_TSMC90 Thvcp_en_7 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[17]), .SN(RESETn), .Q(Thvcp_en[7]), .QN());
    DFFSNLLX1HVT_TSMC90 Thvcp_en_6 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[16]), .SN(RESETn), .Q(Thvcp_en[6]), .QN());
    DFFSNLLX1HVT_TSMC90 Thvcp_en_5 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[15]), .SN(RESETn), .Q(Thvcp_en[5]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_4 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(Thvcp_en[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Thvcp_en_3 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[13]), .SN(RESETn), .Q(Thvcp_en[3]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_2 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(Thvcp_en[2]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_1 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(Thvcp_en[1]), .QN());
    DFFRNLLX1HVT_TSMC90 Thvcp_en_0 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(Thvcp_en[0]), .QN());
    //Tben (10'h031)
    DFFRNLLX1HVT_TSMC90 Tben_9 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(Tben[9]), .QN());
    DFFRNLLX1HVT_TSMC90 Tben_8 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(Tben[8]), .QN());
    DFFRNLLX1HVT_TSMC90 Tben_7 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(Tben[7]), .QN());
    DFFRNLLX1HVT_TSMC90 Tben_6 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(Tben[6]), .QN());
    DFFSNLLX1HVT_TSMC90 Tben_5 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(Tben[5]), .QN());
    DFFSNLLX1HVT_TSMC90 Tben_4 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(Tben[4]), .QN());
    DFFRNLLX1HVT_TSMC90 Tben_3 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(Tben[3]), .QN());
    DFFRNLLX1HVT_TSMC90 Tben_2 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(Tben[2]), .QN());
    DFFRNLLX1HVT_TSMC90 Tben_1 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(Tben[1]), .QN());
    DFFSNLLX1HVT_TSMC90 Tben_0 (.CLK(addr_in_iso_buf[3]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(Tben[0]), .QN());

   //****************************************************
   // REGISTER 0x04 (  4)
   //****************************************************
    //Tmvcp_en (12'h3E8)
    DFFRNLLX1HVT_TSMC90 Tmvcp_en_11 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(Tmvcp_en[11]), .QN());
    DFFRNLLX1HVT_TSMC90 Tmvcp_en_10 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(Tmvcp_en[10]), .QN());
    DFFSNLLX1HVT_TSMC90 Tmvcp_en_9 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[21]), .SN(RESETn), .Q(Tmvcp_en[9]), .QN());
    DFFSNLLX1HVT_TSMC90 Tmvcp_en_8 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[20]), .SN(RESETn), .Q(Tmvcp_en[8]), .QN());
    DFFSNLLX1HVT_TSMC90 Tmvcp_en_7 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[19]), .SN(RESETn), .Q(Tmvcp_en[7]), .QN());
    DFFSNLLX1HVT_TSMC90 Tmvcp_en_6 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[18]), .SN(RESETn), .Q(Tmvcp_en[6]), .QN());
    DFFSNLLX1HVT_TSMC90 Tmvcp_en_5 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[17]), .SN(RESETn), .Q(Tmvcp_en[5]), .QN());
    DFFRNLLX1HVT_TSMC90 Tmvcp_en_4 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(Tmvcp_en[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tmvcp_en_3 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[15]), .SN(RESETn), .Q(Tmvcp_en[3]), .QN());
    DFFRNLLX1HVT_TSMC90 Tmvcp_en_2 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(Tmvcp_en[2]), .QN());
    DFFRNLLX1HVT_TSMC90 Tmvcp_en_1 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(Tmvcp_en[1]), .QN());
    DFFRNLLX1HVT_TSMC90 Tmvcp_en_0 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(Tmvcp_en[0]), .QN());
    //Tsc_en (12'h3E8)
    DFFRNLLX1HVT_TSMC90 Tsc_en_11 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(Tsc_en[11]), .QN());
    DFFRNLLX1HVT_TSMC90 Tsc_en_10 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(Tsc_en[10]), .QN());
    DFFSNLLX1HVT_TSMC90 Tsc_en_9 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(Tsc_en[9]), .QN());
    DFFSNLLX1HVT_TSMC90 Tsc_en_8 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(Tsc_en[8]), .QN());
    DFFSNLLX1HVT_TSMC90 Tsc_en_7 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(Tsc_en[7]), .QN());
    DFFSNLLX1HVT_TSMC90 Tsc_en_6 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(Tsc_en[6]), .QN());
    DFFSNLLX1HVT_TSMC90 Tsc_en_5 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(Tsc_en[5]), .QN());
    DFFRNLLX1HVT_TSMC90 Tsc_en_4 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(Tsc_en[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tsc_en_3 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(Tsc_en[3]), .QN());
    DFFRNLLX1HVT_TSMC90 Tsc_en_2 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(Tsc_en[2]), .QN());
    DFFRNLLX1HVT_TSMC90 Tsc_en_1 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(Tsc_en[1]), .QN());
    DFFRNLLX1HVT_TSMC90 Tsc_en_0 (.CLK(addr_in_iso_buf[4]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(Tsc_en[0]), .QN());

   //****************************************************
   // REGISTER 0x05 (  5)
   //****************************************************
    //Tcap (20'h007CF)
    DFFRNLLX1HVT_TSMC90 Tcap_19 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(Tcap[19]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_18 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(Tcap[18]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_17 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(Tcap[17]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_16 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(Tcap[16]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_15 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(Tcap[15]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_14 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(Tcap[14]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_13 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(Tcap[13]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_12 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(Tcap[12]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_11 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(Tcap[11]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_10 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(Tcap[10]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_9 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(Tcap[9]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_8 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(Tcap[8]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_7 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(Tcap[7]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_6 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(Tcap[6]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_5 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(Tcap[5]), .QN());
    DFFRNLLX1HVT_TSMC90 Tcap_4 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(Tcap[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_3 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(Tcap[3]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_2 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(Tcap[2]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_1 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(Tcap[1]), .QN());
    DFFSNLLX1HVT_TSMC90 Tcap_0 (.CLK(addr_in_iso_buf[5]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(Tcap[0]), .QN());

   //****************************************************
   // REGISTER 0x06 (  6)
   //****************************************************
    //Tvref (17'h01F3F)
    DFFRNLLX1HVT_TSMC90 Tvref_16 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(Tvref[16]), .QN());
    DFFRNLLX1HVT_TSMC90 Tvref_15 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(Tvref[15]), .QN());
    DFFRNLLX1HVT_TSMC90 Tvref_14 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(Tvref[14]), .QN());
    DFFRNLLX1HVT_TSMC90 Tvref_13 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(Tvref[13]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_12 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(Tvref[12]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_11 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(Tvref[11]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_10 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(Tvref[10]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_9 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(Tvref[9]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_8 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(Tvref[8]), .QN());
    DFFRNLLX1HVT_TSMC90 Tvref_7 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(Tvref[7]), .QN());
    DFFRNLLX1HVT_TSMC90 Tvref_6 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(Tvref[6]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_5 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(Tvref[5]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_4 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(Tvref[4]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_3 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(Tvref[3]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_2 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(Tvref[2]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_1 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(Tvref[1]), .QN());
    DFFSNLLX1HVT_TSMC90 Tvref_0 (.CLK(addr_in_iso_buf[6]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(Tvref[0]), .QN());

   //****************************************************
   // REGISTER 0x07 (  7)
   //****************************************************
    //SRAM_START_ADDR (13'h0000)
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_12 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(SRAM_START_ADDR[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_11 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(SRAM_START_ADDR[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_10 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(SRAM_START_ADDR[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_9 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(SRAM_START_ADDR[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_8 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(SRAM_START_ADDR[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_7 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(SRAM_START_ADDR[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_6 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(SRAM_START_ADDR[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_5 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(SRAM_START_ADDR[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_4 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(SRAM_START_ADDR[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_3 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(SRAM_START_ADDR[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_2 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(SRAM_START_ADDR[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_1 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(SRAM_START_ADDR[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_0 (.CLK(addr_in_iso_buf[7]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(SRAM_START_ADDR[0]), .QN());

   //****************************************************
   // REGISTER 0x08 (  8)
   //****************************************************
    //FLSH_START_ADDR (18'h00000)
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_17 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(FLSH_START_ADDR[17]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_16 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(FLSH_START_ADDR[16]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_15 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(FLSH_START_ADDR[15]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_14 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLSH_START_ADDR[14]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_13 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLSH_START_ADDR[13]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_12 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(FLSH_START_ADDR[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_11 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(FLSH_START_ADDR[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_10 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(FLSH_START_ADDR[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_9 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_START_ADDR[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_8 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_START_ADDR[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_7 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(FLSH_START_ADDR[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_6 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(FLSH_START_ADDR[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_5 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLSH_START_ADDR[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_4 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_START_ADDR[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_3 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_START_ADDR[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_2 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLSH_START_ADDR[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_1 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLSH_START_ADDR[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLSH_START_ADDR_0 (.CLK(addr_in_iso_buf[8]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLSH_START_ADDR[0]), .QN());

   //****************************************************
   // REGISTER 0x09 (  9)
   //****************************************************
    //LENGTH (13'h0000)
    //DFFRNLLX1HVT_TSMC90 LENGTH_12 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(LENGTH[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_11 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(LENGTH[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_10 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(LENGTH[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_9 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(LENGTH[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_8 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(LENGTH[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_7 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(LENGTH[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_6 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(LENGTH[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_5 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(LENGTH[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_4 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(LENGTH[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_3 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(LENGTH[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_2 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(LENGTH[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_1 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(LENGTH[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 LENGTH_0 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(LENGTH[0]), .QN());
    //IRQ_EN (1'h0)
    //DFFRNLLX1HVT_TSMC90 IRQ_EN_0 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(IRQ_EN), .QN());
    //CMD (4'h0)
    //DFFRNLLX1HVT_TSMC90 CMD_3 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(CMD[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 CMD_2 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(CMD[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 CMD_1 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(CMD[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 CMD_0 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(CMD[0]), .QN());
    //GO (1'h0)
    //DFFRNLLX1HVT_TSMC90 GO_0 (.CLK(addr_in_iso_buf[9]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(GO), .QN());

   //****************************************************
   // REGISTER 0x0A ( 10)
   //****************************************************
    //VREF_SLEEP (1'h1)
    DFFSNLLX1HVT_TSMC90 VREF_SLEEP_0 (.CLK(addr_in_iso_buf[10]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(VREF_SLEEP), .QN());
    //COMP_SLEEP (1'h1)
    DFFSNLLX1HVT_TSMC90 COMP_SLEEP_0 (.CLK(addr_in_iso_buf[10]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(COMP_SLEEP), .QN());
    //COMP_CLKENB (1'h1)
    DFFSNLLX1HVT_TSMC90 COMP_CLKENB_0 (.CLK(addr_in_iso_buf[10]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(COMP_CLKENB), .QN(COMP_CLKEN));
    //COMP_ISOL (1'h1)
    DFFSNLLX1HVT_TSMC90 COMP_ISOL_0 (.CLK(addr_in_iso_buf[10]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(COMP_ISOL), .QN());

   //****************************************************
   // REGISTER 0x0B ( 11) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x0C ( 12)
   //****************************************************
    //WRAP_EXT (1'h0)
    DFFRNLLX1HVT_TSMC90 WRAP_EXT_0 (.CLK(addr_in_iso_buf[12]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(WRAP_EXT), .QN());
    //UPDATE_ADDR_EXT (1'h0)
    DFFRNLLX1HVT_TSMC90 UPDATE_ADDR_EXT_0 (.CLK(addr_in_iso_buf[12]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(UPDATE_ADDR_EXT), .QN());
    //BIT_EN_EXT (2'h1)
    DFFRNLLX1HVT_TSMC90 BIT_EN_EXT_1 (.CLK(addr_in_iso_buf[12]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(BIT_EN_EXT[1]), .QN());
    DFFSNLLX1HVT_TSMC90 BIT_EN_EXT_0 (.CLK(addr_in_iso_buf[12]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(BIT_EN_EXT[0]), .QN());

   //****************************************************
   // REGISTER 0x0D ( 13)
   //****************************************************
    //TIMEOUT_EXT (20'hFFFFF)
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_19 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[19]), .SN(RESETn), .Q(TIMEOUT_EXT[19]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_18 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[18]), .SN(RESETn), .Q(TIMEOUT_EXT[18]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_17 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[17]), .SN(RESETn), .Q(TIMEOUT_EXT[17]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_16 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[16]), .SN(RESETn), .Q(TIMEOUT_EXT[16]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_15 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[15]), .SN(RESETn), .Q(TIMEOUT_EXT[15]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_14 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[14]), .SN(RESETn), .Q(TIMEOUT_EXT[14]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_13 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[13]), .SN(RESETn), .Q(TIMEOUT_EXT[13]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_12 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(TIMEOUT_EXT[12]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_11 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(TIMEOUT_EXT[11]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_10 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(TIMEOUT_EXT[10]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_9 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(TIMEOUT_EXT[9]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_8 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(TIMEOUT_EXT[8]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_7 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(TIMEOUT_EXT[7]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_6 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(TIMEOUT_EXT[6]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_5 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(TIMEOUT_EXT[5]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_4 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(TIMEOUT_EXT[4]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_3 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(TIMEOUT_EXT[3]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_2 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(TIMEOUT_EXT[2]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_1 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(TIMEOUT_EXT[1]), .QN());
    DFFSNLLX1HVT_TSMC90 TIMEOUT_EXT_0 (.CLK(addr_in_iso_buf[13]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(TIMEOUT_EXT[0]), .QN());

   //****************************************************
   // REGISTER 0x0E ( 14)
   //****************************************************
    //SRAM_START_ADDR_EXT (13'h0000)
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_12 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[12]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_11 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[11]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_10 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[10]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_9 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[9]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_8 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[8]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_7 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[7]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_6 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[6]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_5 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[5]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_4 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[4]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_3 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[3]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_2 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[2]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_1 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[1]), .QN());
    DFFRNLLX1HVT_TSMC90 SRAM_START_ADDR_EXT_0 (.CLK(addr_in_iso_buf[14]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(SRAM_START_ADDR_EXT[0]), .QN());

   //****************************************************
   // REGISTER 0x0F ( 15)
   //****************************************************
    //INT_RPLY_SHORT_ADDR (8'h10)
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_7 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[7]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_6 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[6]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_5 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[5]), .QN());
    DFFSNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_4 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(INT_RPLY_SHORT_ADDR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_3 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_2 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_1 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_SHORT_ADDR_0 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(INT_RPLY_SHORT_ADDR[0]), .QN());
    //INT_RPLY_REG_ADDR (8'h00)
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_7 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[7]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_6 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[6]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_5 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[5]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_4 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_3 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_2 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_1 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 INT_RPLY_REG_ADDR_0 (.CLK(addr_in_iso_buf[15]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(INT_RPLY_REG_ADDR[0]), .QN());

   //****************************************************
   // REGISTER 0x10 ( 16)
   //****************************************************
    //BOOT_FLAG_SLEEP (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_SLEEP_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(BOOT_FLAG_SLEEP), .QN());
    //BOOT_FLAG_ECC_ERROR (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_ECC_ERROR_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(BOOT_FLAG_ECC_ERROR), .QN());
    //BOOT_FLAG_WRONG_HEADER (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_WRONG_HEADER_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(BOOT_FLAG_WRONG_HEADER), .QN());
    //BOOT_FLAG_PWDN (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_PWDN_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(BOOT_FLAG_PWDN), .QN());
    //BOOT_FLAG_INVALID_CMND (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_INVALID_CMND_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(BOOT_FLAG_INVALID_CMND), .QN());
    //BOOT_FLAG_CHKSUM_ERROR (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_CHKSUM_ERROR_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(BOOT_FLAG_CHKSUM_ERROR), .QN());
    //BOOT_FLAG_SUCCESS (1'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_FLAG_SUCCESS_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(BOOT_FLAG_SUCCESS), .QN());
    //BOOT_REG_PATTERN (2'h0)
    DFFRNLLX1HVT_TSMC90 BOOT_REG_PATTERN_1 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(BOOT_REG_PATTERN[1]), .QN());
    DFFRNLLX1HVT_TSMC90 BOOT_REG_PATTERN_0 (.CLK(addr_in_iso_buf[16]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(BOOT_REG_PATTERN[0]), .QN());

   //****************************************************
   // REGISTER 0x11 ( 17)
   //****************************************************
    //FLASH_POWER_DO_VREFCOMP (1'h1)
    DFFSNLLX1HVT_TSMC90 FLASH_POWER_DO_VREFCOMP_0 (.CLK(addr_in_iso_buf[17]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(FLASH_POWER_DO_VREFCOMP), .QN());
    //FLASH_POWER_DO_FLSH (1'h1)
    DFFSNLLX1HVT_TSMC90 FLASH_POWER_DO_FLSH_0 (.CLK(addr_in_iso_buf[17]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(FLASH_POWER_DO_FLSH), .QN());
    //FLASH_POWER_IRQ_EN (1'h1)
    DFFSNLLX1HVT_TSMC90 FLASH_POWER_IRQ_EN_0 (.CLK(addr_in_iso_buf[17]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(FLASH_POWER_IRQ_EN), .QN());
    //FLASH_POWER_SEL_ON (1'h1)
    DFFSNLLX1HVT_TSMC90 FLASH_POWER_SEL_ON_0 (.CLK(addr_in_iso_buf[17]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(FLASH_POWER_SEL_ON), .QN());
    //FLASH_POWER_GO (1'h0)
    DFFRNLLX1HVT_TSMC90 FLASH_POWER_GO_0 (.CLK(addr_in_iso_buf[17]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLASH_POWER_GO), .QN());

   //****************************************************
   // REGISTER 0x12 ( 18)
   //****************************************************
    //IRQ_PWR_ON_WUP (1'h0)
    DFFRNLLX1HVT_TSMC90 IRQ_PWR_ON_WUP_0 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(IRQ_PWR_ON_WUP), .QN());
    //SEL_PWR_ON_WUP (3'h0)
    DFFRNLLX1HVT_TSMC90 SEL_PWR_ON_WUP_2 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(SEL_PWR_ON_WUP[2]), .QN());
    DFFRNLLX1HVT_TSMC90 SEL_PWR_ON_WUP_1 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(SEL_PWR_ON_WUP[1]), .QN());
    DFFRNLLX1HVT_TSMC90 SEL_PWR_ON_WUP_0 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(SEL_PWR_ON_WUP[0]), .QN());
    //FLASH_AUTO_USE_CUSTOM (1'h0)
    DFFRNLLX1HVT_TSMC90 FLASH_AUTO_USE_CUSTOM_0 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLASH_AUTO_USE_CUSTOM), .QN());
    //FLASH_AUTO_OFF (1'h0)
    DFFRNLLX1HVT_TSMC90 FLASH_AUTO_OFF_0 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLASH_AUTO_OFF), .QN());
    //FLASH_AUTO_ON (1'h0)
    DFFRNLLX1HVT_TSMC90 FLASH_AUTO_ON_0 (.CLK(addr_in_iso_buf[18]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLASH_AUTO_ON), .QN());

   //****************************************************
   // REGISTER 0x13 ( 19)
   //****************************************************
    //PP_STR_LIMIT (19'h00000)
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_18 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(PP_STR_LIMIT[18]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_17 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(PP_STR_LIMIT[17]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_16 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(PP_STR_LIMIT[16]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_15 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(PP_STR_LIMIT[15]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_14 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(PP_STR_LIMIT[14]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_13 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(PP_STR_LIMIT[13]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_12 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(PP_STR_LIMIT[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_11 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(PP_STR_LIMIT[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_10 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(PP_STR_LIMIT[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_9 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(PP_STR_LIMIT[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_8 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(PP_STR_LIMIT[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_7 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(PP_STR_LIMIT[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_6 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(PP_STR_LIMIT[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_5 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(PP_STR_LIMIT[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_4 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(PP_STR_LIMIT[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_3 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(PP_STR_LIMIT[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_2 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(PP_STR_LIMIT[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_1 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(PP_STR_LIMIT[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_STR_LIMIT_0 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(PP_STR_LIMIT[0]), .QN());
    //PP_STR_EN (1'h0)
    //DFFRNLLX1HVT_TSMC90 PP_STR_EN_0 (.CLK(addr_in_iso_buf[19]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(PP_STR_EN), .QN());

   //****************************************************
   // REGISTER 0x14 ( 20)
   //****************************************************
    //PP_NO_ERR_DETECTION (1'h0)
    DFFRNLLX1HVT_TSMC90 PP_NO_ERR_DETECTION_0 (.CLK(addr_in_iso_buf[20]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(PP_NO_ERR_DETECTION), .QN());
    //PP_USE_FAST_PROG (1'h0)
    DFFRNLLX1HVT_TSMC90 PP_USE_FAST_PROG_0 (.CLK(addr_in_iso_buf[20]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(PP_USE_FAST_PROG), .QN());
    //PP_WRAP (1'h0)
    DFFRNLLX1HVT_TSMC90 PP_WRAP_0 (.CLK(addr_in_iso_buf[20]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(PP_WRAP), .QN());
    //PP_BIT_EN_EXT (2'h1)
    DFFRNLLX1HVT_TSMC90 PP_BIT_EN_EXT_1 (.CLK(addr_in_iso_buf[20]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(PP_BIT_EN_EXT[1]), .QN());
    DFFSNLLX1HVT_TSMC90 PP_BIT_EN_EXT_0 (.CLK(addr_in_iso_buf[20]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(PP_BIT_EN_EXT[0]), .QN());

   //****************************************************
   // REGISTER 0x15 ( 21)
   //****************************************************
    //PP_FLSH_ADDR (18'h00000)
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_17 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(PP_FLSH_ADDR[17]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_16 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(PP_FLSH_ADDR[16]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_15 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(PP_FLSH_ADDR[15]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_14 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(PP_FLSH_ADDR[14]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_13 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(PP_FLSH_ADDR[13]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_12 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(PP_FLSH_ADDR[12]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_11 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(PP_FLSH_ADDR[11]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_10 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(PP_FLSH_ADDR[10]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_9 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(PP_FLSH_ADDR[9]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_8 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(PP_FLSH_ADDR[8]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_7 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(PP_FLSH_ADDR[7]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_6 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(PP_FLSH_ADDR[6]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_5 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(PP_FLSH_ADDR[5]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_4 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(PP_FLSH_ADDR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_3 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(PP_FLSH_ADDR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_2 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(PP_FLSH_ADDR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_1 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(PP_FLSH_ADDR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 PP_FLSH_ADDR_0 (.CLK(addr_in_iso_buf[21]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(PP_FLSH_ADDR[0]), .QN());

   //****************************************************
   // REGISTER 0x16 ( 22)
   //****************************************************
    //PP_LENGTH_STREAMED (19'h00000)
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_18 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[18]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_17 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[17]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_16 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[16]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_15 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[15]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_14 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[14]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_13 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[13]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_12 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_11 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_10 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_9 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_8 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_7 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_6 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_5 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_4 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_3 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_2 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_1 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_STREAMED_0 (.CLK(addr_in_iso_buf[22]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(PP_LENGTH_STREAMED[0]), .QN());

   //****************************************************
   // REGISTER 0x17 ( 23)
   //****************************************************
    //PP_FLAG_END_OF_FLASH (1'h0)
    //DFFRNLLX1HVT_TSMC90 PP_FLAG_END_OF_FLASH_0 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(PP_FLAG_END_OF_FLASH), .QN());
    //PP_FLAG_STR_LIMIT (1'h0)
    //DFFRNLLX1HVT_TSMC90 PP_FLAG_STR_LIMIT_0 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(PP_FLAG_STR_LIMIT), .QN());
    //PP_FLAG_COPY_LIMIT (1'h0)
    //DFFRNLLX1HVT_TSMC90 PP_FLAG_COPY_LIMIT_0 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(PP_FLAG_COPY_LIMIT), .QN());
    //PP_LENGTH_COPIED (19'h00000)
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_18 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(PP_LENGTH_COPIED[18]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_17 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(PP_LENGTH_COPIED[17]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_16 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(PP_LENGTH_COPIED[16]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_15 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(PP_LENGTH_COPIED[15]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_14 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(PP_LENGTH_COPIED[14]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_13 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(PP_LENGTH_COPIED[13]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_12 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(PP_LENGTH_COPIED[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_11 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(PP_LENGTH_COPIED[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_10 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(PP_LENGTH_COPIED[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_9 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(PP_LENGTH_COPIED[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_8 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(PP_LENGTH_COPIED[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_7 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(PP_LENGTH_COPIED[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_6 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(PP_LENGTH_COPIED[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_5 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(PP_LENGTH_COPIED[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_4 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(PP_LENGTH_COPIED[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_3 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(PP_LENGTH_COPIED[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_2 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(PP_LENGTH_COPIED[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_1 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(PP_LENGTH_COPIED[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 PP_LENGTH_COPIED_0 (.CLK(addr_in_iso_buf[23]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(PP_LENGTH_COPIED[0]), .QN());

   //****************************************************
   // REGISTER 0x18 ( 24)
   //****************************************************
    //CLK_RING_SEL (4'hC)
    DFFSNLLX1HVT_TSMC90 CLK_RING_SEL_3 (.CLK(addr_in_iso_buf[24]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(CLK_RING_SEL[3]), .QN());
    DFFSNLLX1HVT_TSMC90 CLK_RING_SEL_2 (.CLK(addr_in_iso_buf[24]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(CLK_RING_SEL[2]), .QN());
    DFFRNLLX1HVT_TSMC90 CLK_RING_SEL_1 (.CLK(addr_in_iso_buf[24]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(CLK_RING_SEL[1]), .QN());
    DFFRNLLX1HVT_TSMC90 CLK_RING_SEL_0 (.CLK(addr_in_iso_buf[24]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(CLK_RING_SEL[0]), .QN());
    //CLK_DIV_SEL (2'h1)
    DFFRNLLX1HVT_TSMC90 CLK_DIV_SEL_1 (.CLK(addr_in_iso_buf[24]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(CLK_DIV_SEL[1]), .QN());
    DFFSNLLX1HVT_TSMC90 CLK_DIV_SEL_0 (.CLK(addr_in_iso_buf[24]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(CLK_DIV_SEL[0]), .QN());

   //****************************************************
   // REGISTER 0x19 ( 25)
   //****************************************************
    //DISABLE_BYPASS_MIRROR (1'h1)
    DFFSNLLX1HVT_TSMC90 DISABLE_BYPASS_MIRROR_0 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(DISABLE_BYPASS_MIRROR), .QN());
    //COMP_CTRL_I_1STG (4'h8)
    DFFSNLLX1HVT_TSMC90 COMP_CTRL_I_1STG_3 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(COMP_CTRL_I_1STG[3]), .QN());
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_1STG_2 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(COMP_CTRL_I_1STG[2]), .QN());
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_1STG_1 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(COMP_CTRL_I_1STG[1]), .QN());
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_1STG_0 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(COMP_CTRL_I_1STG[0]), .QN());
    //COMP_CTRL_I_2STG_BAR (4'h0)
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_2STG_BAR_3 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(COMP_CTRL_I_2STG_BAR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_2STG_BAR_2 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(COMP_CTRL_I_2STG_BAR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_2STG_BAR_1 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(COMP_CTRL_I_2STG_BAR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_I_2STG_BAR_0 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(COMP_CTRL_I_2STG_BAR[0]), .QN());
    //COMP_CTRL_VOUT (3'h3)
    DFFRNLLX1HVT_TSMC90 COMP_CTRL_VOUT_2 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(COMP_CTRL_VOUT[2]), .QN());
    DFFSNLLX1HVT_TSMC90 COMP_CTRL_VOUT_1 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(COMP_CTRL_VOUT[1]), .QN());
    DFFSNLLX1HVT_TSMC90 COMP_CTRL_VOUT_0 (.CLK(addr_in_iso_buf[25]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(COMP_CTRL_VOUT[0]), .QN());

   //****************************************************
   // REGISTER 0x1A ( 26) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1B ( 27)
   //****************************************************
    //IRQ_PAYLOAD (8'h00)
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_7 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(IRQ_PAYLOAD[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_6 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(IRQ_PAYLOAD[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_5 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(IRQ_PAYLOAD[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_4 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(IRQ_PAYLOAD[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_3 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(IRQ_PAYLOAD[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_2 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(IRQ_PAYLOAD[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_1 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(IRQ_PAYLOAD[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 IRQ_PAYLOAD_0 (.CLK(addr_in_iso_buf[27]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(IRQ_PAYLOAD[0]), .QN());

   //****************************************************
   // REGISTER 0x1C ( 28) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1D ( 29) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x1E ( 30)
   //****************************************************
    //FLS2LC_REG_WR_DATA (24'h000000)
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_23 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[23]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_22 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[22]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_21 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[21]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_20 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[20]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_19 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[19]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_18 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[18]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_17 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[17]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_16 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[16]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_15 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[15]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_14 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[14]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_13 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[13]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_12 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[12]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_11 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[11]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_10 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[10]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_9 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[9]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_8 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[8]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_7 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[7]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_6 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[6]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_5 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[5]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_4 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[4]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_3 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[3]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_2 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[2]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_1 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[1]), .QN());
    //DFFRNLLX1HVT_TSMC90 FLS2LC_REG_WR_DATA_0 (.CLK(addr_in_iso_buf[30]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLS2LC_REG_WR_DATA[0]), .QN());

   //****************************************************
   // REGISTER 0x1F ( 31)
   //****************************************************
    //FORCE_RESETN (1'h1)
    DFFSNLLX1HVT_TSMC90 FORCE_RESETN_0 (.CLK(addr_in_iso_buf[31]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(FORCE_RESETN), .QN());

   //****************************************************
   // REGISTER 0x20 ( 32)
   //****************************************************
    //FLSH_SET0 (5'h04)
    DFFRNLLX1HVT_TSMC90 FLSH_SET0_4 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLSH_SET0[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SET0_3 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLSH_SET0[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SET0_2 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(FLSH_SET0[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SET0_1 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(FLSH_SET0[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SET0_0 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(FLSH_SET0[0]), .QN());
    //FLSH_SET1 (5'h04)
    DFFRNLLX1HVT_TSMC90 FLSH_SET1_4 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_SET1[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SET1_3 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_SET1[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SET1_2 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SET1[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SET1_1 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(FLSH_SET1[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SET1_0 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLSH_SET1[0]), .QN());
    //FLSH_SNT (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SNT_4 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SNT[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SNT_3 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SNT[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SNT_2 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(FLSH_SNT[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SNT_1 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(FLSH_SNT[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SNT_0 (.CLK(addr_in_iso_buf[32]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(FLSH_SNT[0]), .QN());

   //****************************************************
   // REGISTER 0x21 ( 33)
   //****************************************************
    //FLSH_SPT0 (5'h04)
    DFFRNLLX1HVT_TSMC90 FLSH_SPT0_4 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLSH_SPT0[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT0_3 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLSH_SPT0[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SPT0_2 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(FLSH_SPT0[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT0_1 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(FLSH_SPT0[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT0_0 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(FLSH_SPT0[0]), .QN());
    //FLSH_SPT1 (5'h04)
    DFFRNLLX1HVT_TSMC90 FLSH_SPT1_4 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_SPT1[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT1_3 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_SPT1[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SPT1_2 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SPT1[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT1_1 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(FLSH_SPT1[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT1_0 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLSH_SPT1[0]), .QN());
    //FLSH_SPT2 (5'h04)
    DFFRNLLX1HVT_TSMC90 FLSH_SPT2_4 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SPT2[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT2_3 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SPT2[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SPT2_2 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(FLSH_SPT2[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT2_1 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLSH_SPT2[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPT2_0 (.CLK(addr_in_iso_buf[33]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLSH_SPT2[0]), .QN());

   //****************************************************
   // REGISTER 0x22 ( 34)
   //****************************************************
    //FLSH_SYT0 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SYT0_4 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_SYT0[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SYT0_3 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_SYT0[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SYT0_2 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SYT0[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SYT0_1 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(FLSH_SYT0[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SYT0_0 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(FLSH_SYT0[0]), .QN());
    //FLSH_SYT1 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SYT1_4 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SYT1[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SYT1_3 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SYT1[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SYT1_2 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(FLSH_SYT1[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SYT1_1 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(FLSH_SYT1[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SYT1_0 (.CLK(addr_in_iso_buf[34]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(FLSH_SYT1[0]), .QN());

   //****************************************************
   // REGISTER 0x23 ( 35)
   //****************************************************
    //FLSH_SRT0 (5'h01)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT0_4 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(FLSH_SRT0[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT0_3 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(FLSH_SRT0[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT0_2 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(FLSH_SRT0[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT0_1 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(FLSH_SRT0[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT0_0 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[15]), .SN(RESETn), .Q(FLSH_SRT0[0]), .QN());
    //FLSH_SRT1 (5'h03)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT1_4 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLSH_SRT1[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT1_3 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLSH_SRT1[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT1_2 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(FLSH_SRT1[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT1_1 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(FLSH_SRT1[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT1_0 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(FLSH_SRT1[0]), .QN());
    //FLSH_SRT2 (5'h03)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT2_4 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_SRT2[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT2_3 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_SRT2[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT2_2 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(FLSH_SRT2[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT2_1 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(FLSH_SRT2[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT2_0 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(FLSH_SRT2[0]), .QN());
    //FLSH_SRT3 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT3_4 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SRT3[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT3_3 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SRT3[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT3_2 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(FLSH_SRT3[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT3_1 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(FLSH_SRT3[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT3_0 (.CLK(addr_in_iso_buf[35]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(FLSH_SRT3[0]), .QN());

   //****************************************************
   // REGISTER 0x24 ( 36)
   //****************************************************
    //FLSH_SRT4 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT4_4 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLSH_SRT4[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT4_3 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLSH_SRT4[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT4_2 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(FLSH_SRT4[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT4_1 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(FLSH_SRT4[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT4_0 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(FLSH_SRT4[0]), .QN());
    //FLSH_SRT5 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT5_4 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_SRT5[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT5_3 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_SRT5[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT5_2 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SRT5[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT5_1 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(FLSH_SRT5[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT5_0 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(FLSH_SRT5[0]), .QN());
    //FLSH_SRT6 (5'h01)
    DFFRNLLX1HVT_TSMC90 FLSH_SRT6_4 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SRT6[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT6_3 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SRT6[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT6_2 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLSH_SRT6[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SRT6_1 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLSH_SRT6[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRT6_0 (.CLK(addr_in_iso_buf[36]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(FLSH_SRT6[0]), .QN());

   //****************************************************
   // REGISTER 0x25 ( 37) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x26 ( 38)
   //****************************************************
    //FLSH_SPIG (4'hD)
    DFFSNLLX1HVT_TSMC90 FLSH_SPIG_3 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[19]), .SN(RESETn), .Q(FLSH_SPIG[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SPIG_2 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[18]), .SN(RESETn), .Q(FLSH_SPIG[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SPIG_1 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(FLSH_SPIG[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SPIG_0 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[16]), .SN(RESETn), .Q(FLSH_SPIG[0]), .QN());
    //FLSH_SRIG (4'h7)
    DFFRNLLX1HVT_TSMC90 FLSH_SRIG_3 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(FLSH_SRIG[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRIG_2 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[14]), .SN(RESETn), .Q(FLSH_SRIG[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRIG_1 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[13]), .SN(RESETn), .Q(FLSH_SRIG[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SRIG_0 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(FLSH_SRIG[0]), .QN());
    //FLSH_SVR0 (4'h7)
    DFFRNLLX1HVT_TSMC90 FLSH_SVR0_3 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(FLSH_SVR0[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SVR0_2 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(FLSH_SVR0[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SVR0_1 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(FLSH_SVR0[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SVR0_0 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(FLSH_SVR0[0]), .QN());
    //FLSH_SVR1 (4'h8)
    DFFSNLLX1HVT_TSMC90 FLSH_SVR1_3 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SVR1[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SVR1_2 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(FLSH_SVR1[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SVR1_1 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLSH_SVR1[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SVR1_0 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SVR1[0]), .QN());
    //FLSH_SVR2 (4'h8)
    DFFSNLLX1HVT_TSMC90 FLSH_SVR2_3 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(FLSH_SVR2[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SVR2_2 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLSH_SVR2[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SVR2_1 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLSH_SVR2[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SVR2_0 (.CLK(addr_in_iso_buf[38]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLSH_SVR2[0]), .QN());

   //****************************************************
   // REGISTER 0x27 ( 39)
   //****************************************************
    //FLSH_SHVE (5'h01)
    DFFRNLLX1HVT_TSMC90 FLSH_SHVE_4 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(FLSH_SHVE[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SHVE_3 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(FLSH_SHVE[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SHVE_2 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(FLSH_SHVE[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SHVE_1 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(FLSH_SHVE[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVE_0 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[16]), .SN(RESETn), .Q(FLSH_SHVE[0]), .QN());
    //FLSH_SHVP (5'h03)
    DFFRNLLX1HVT_TSMC90 FLSH_SHVP_4 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[15]), .RN(RESETn), .Q(FLSH_SHVP[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SHVP_3 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[14]), .RN(RESETn), .Q(FLSH_SHVP[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SHVP_2 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[13]), .RN(RESETn), .Q(FLSH_SHVP[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVP_1 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(FLSH_SHVP[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVP_0 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(FLSH_SHVP[0]), .QN());
    //FLSH_SHVCT (5'h0F)
    DFFRNLLX1HVT_TSMC90 FLSH_SHVCT_4 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(FLSH_SHVCT[4]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVCT_3 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(FLSH_SHVCT[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVCT_2 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(FLSH_SHVCT[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVCT_1 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SHVCT[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SHVCT_0 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(FLSH_SHVCT[0]), .QN());
    //FLSH_SMV (6'h08)
    DFFRNLLX1HVT_TSMC90 FLSH_SMV_5 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLSH_SMV[5]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SMV_4 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SMV[4]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMV_3 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(FLSH_SMV[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SMV_2 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLSH_SMV[2]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SMV_1 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(FLSH_SMV[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SMV_0 (.CLK(addr_in_iso_buf[39]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLSH_SMV[0]), .QN());

   //****************************************************
   // REGISTER 0x28 ( 40)
   //****************************************************
    //FLSH_SMVCT0 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SMVCT0_4 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(FLSH_SMVCT0[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SMVCT0_3 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(FLSH_SMVCT0[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMVCT0_2 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(FLSH_SMVCT0[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMVCT0_1 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(FLSH_SMVCT0[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMVCT0_0 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(FLSH_SMVCT0[0]), .QN());
    //FLSH_SMVCT1 (5'h07)
    DFFRNLLX1HVT_TSMC90 FLSH_SMVCT1_4 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SMVCT1[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SMVCT1_3 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SMVCT1[3]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMVCT1_2 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(FLSH_SMVCT1[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMVCT1_1 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(FLSH_SMVCT1[1]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SMVCT1_0 (.CLK(addr_in_iso_buf[40]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(FLSH_SMVCT1[0]), .QN());

   //****************************************************
   // REGISTER 0x29 ( 41) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x2A ( 42)
   //****************************************************
    //FLSH_SAB (6'h02)
    DFFRNLLX1HVT_TSMC90 FLSH_SAB_5 (.CLK(addr_in_iso_buf[42]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(FLSH_SAB[5]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SAB_4 (.CLK(addr_in_iso_buf[42]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(FLSH_SAB[4]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SAB_3 (.CLK(addr_in_iso_buf[42]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(FLSH_SAB[3]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SAB_2 (.CLK(addr_in_iso_buf[42]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(FLSH_SAB[2]), .QN());
    DFFSNLLX1HVT_TSMC90 FLSH_SAB_1 (.CLK(addr_in_iso_buf[42]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(FLSH_SAB[1]), .QN());
    DFFRNLLX1HVT_TSMC90 FLSH_SAB_0 (.CLK(addr_in_iso_buf[42]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(FLSH_SAB[0]), .QN());

   //****************************************************
   // REGISTER 0x2B ( 43) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x2C ( 44) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x2D ( 45) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x2E ( 46) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x2F ( 47) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x30 ( 48)
   //****************************************************
    //STR_WR_CH1_ALT_ADDR (8'hF0)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_7 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[23]), .SN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[7]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_6 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[22]), .SN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[6]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_5 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[21]), .SN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[5]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_4 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[20]), .SN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_3 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_2 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_1 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_ADDR_0 (.CLK(addr_in_iso_buf[48]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(STR_WR_CH1_ALT_ADDR[0]), .QN());

   //****************************************************
   // REGISTER 0x31 ( 49)
   //****************************************************
    //STR_WR_CH1_ALT_REG_WR (8'h00)
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_7 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[7]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_6 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[6]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_5 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[5]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_4 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_3 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_2 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_1 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_ALT_REG_WR_0 (.CLK(addr_in_iso_buf[49]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(STR_WR_CH1_ALT_REG_WR[0]), .QN());

   //****************************************************
   // REGISTER 0x32 ( 50)
   //****************************************************
    //STR_WR_CH1_EN (1'h1)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_EN_0 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[23]), .SN(RESETn), .Q(STR_WR_CH1_EN), .QN());
    //STR_WR_CH1_WRP (1'h1)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_WRP_0 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[22]), .SN(RESETn), .Q(STR_WR_CH1_WRP), .QN());
    //STR_WR_CH1_DBLB (1'h0)
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_DBLB_0 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(STR_WR_CH1_DBLB), .QN());
    //STR_WR_CH1_BUF_LEN (13'h1FFF)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_12 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[12]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_11 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[11]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_10 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[10]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_9 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[9]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_8 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[8]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_7 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[7]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_6 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[6]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_5 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[5]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_4 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[4]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_3 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[3]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_2 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[2]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_1 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[1]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH1_BUF_LEN_0 (.CLK(addr_in_iso_buf[50]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(STR_WR_CH1_BUF_LEN[0]), .QN());

   //****************************************************
   // REGISTER 0x33 ( 51)
   //****************************************************
    //STR_WR_CH1_BUF_OFF (13'h0000)
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_12 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[12]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_11 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[11]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_10 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[10]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_9 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[9]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_8 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[8]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_7 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[7]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_6 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[6]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_5 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[5]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_4 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[4]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_3 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[3]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_2 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[2]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_1 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[1]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH1_BUF_OFF_0 (.CLK(addr_in_iso_buf[51]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(STR_WR_CH1_BUF_OFF[0]), .QN());

   //****************************************************
   // REGISTER 0x34 ( 52)
   //****************************************************
    //STR_WR_CH0_ALT_ADDR (8'hF0)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_7 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[23]), .SN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[7]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_6 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[22]), .SN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[6]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_5 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[21]), .SN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[5]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_4 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[20]), .SN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_3 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_2 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_1 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_ADDR_0 (.CLK(addr_in_iso_buf[52]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(STR_WR_CH0_ALT_ADDR[0]), .QN());

   //****************************************************
   // REGISTER 0x35 ( 53)
   //****************************************************
    //STR_WR_CH0_ALT_REG_WR (8'h00)
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_7 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[7]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_6 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[22]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[6]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_5 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[5]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_4 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[20]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[4]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_3 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[19]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[3]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_2 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[18]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[2]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_1 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[17]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[1]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_ALT_REG_WR_0 (.CLK(addr_in_iso_buf[53]), .D(data_in_iso_buf[16]), .RN(RESETn), .Q(STR_WR_CH0_ALT_REG_WR[0]), .QN());

   //****************************************************
   // REGISTER 0x36 ( 54)
   //****************************************************
    //STR_WR_CH0_EN (1'h1)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_EN_0 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[23]), .SN(RESETn), .Q(STR_WR_CH0_EN), .QN());
    //STR_WR_CH0_WRP (1'h1)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_WRP_0 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[22]), .SN(RESETn), .Q(STR_WR_CH0_WRP), .QN());
    //STR_WR_CH0_DBLB (1'h0)
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_DBLB_0 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[21]), .RN(RESETn), .Q(STR_WR_CH0_DBLB), .QN());
    //STR_WR_CH0_BUF_LEN (13'h1FFF)
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_12 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[12]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[12]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_11 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[11]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[11]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_10 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[10]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[10]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_9 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[9]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[9]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_8 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[8]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[8]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_7 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[7]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[7]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_6 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[6]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[6]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_5 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[5]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[5]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_4 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[4]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[4]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_3 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[3]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[3]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_2 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[2]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[2]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_1 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[1]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[1]), .QN());
    DFFSNLLX1HVT_TSMC90 STR_WR_CH0_BUF_LEN_0 (.CLK(addr_in_iso_buf[54]), .D(data_in_iso_buf[0]), .SN(RESETn), .Q(STR_WR_CH0_BUF_LEN[0]), .QN());

   //****************************************************
   // REGISTER 0x37 ( 55)
   //****************************************************
    //STR_WR_CH0_BUF_OFF (13'h0000)
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_12 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[12]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[12]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_11 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[11]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[11]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_10 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[10]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[10]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_9 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[9]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[9]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_8 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[8]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[8]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_7 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[7]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[7]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_6 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[6]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[6]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_5 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[5]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[5]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_4 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[4]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[4]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_3 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[3]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[3]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_2 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[2]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[2]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_1 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[1]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[1]), .QN());
    DFFRNLLX1HVT_TSMC90 STR_WR_CH0_BUF_OFF_0 (.CLK(addr_in_iso_buf[55]), .D(data_in_iso_buf[0]), .RN(RESETn), .Q(STR_WR_CH0_BUF_OFF[0]), .QN());

   //****************************************************
   // REGISTER 0x38 ( 56) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x39 ( 57) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x3A ( 58)
   //****************************************************
    //BLK_WR_EN (1'h1)
    DFFSNLLX1HVT_TSMC90 BLK_WR_EN_0 (.CLK(addr_in_iso_buf[58]), .D(data_in_iso_buf[23]), .SN(RESETn), .Q(BLK_WR_EN), .QN());

   //****************************************************
   // REGISTER 0x3B ( 59) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x3C ( 60) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x3D ( 61) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x3E ( 62) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x3F ( 63) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x40 ( 64) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x41 ( 65) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x42 ( 66) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x43 ( 67) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x44 ( 68) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x45 ( 69) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x46 ( 70) - Empty Register
   //****************************************************

   //****************************************************
   // REGISTER 0x47 ( 71)
   //****************************************************
    //ACT_RST (1'h0)
    DFFRNLLX1HVT_TSMC90 ACT_RST_0 (.CLK(addr_in_iso_buf[71]), .D(data_in_iso_buf[23]), .RN(RESETn), .Q(ACT_RST), .QN());

endmodule // flpv3l_rf
